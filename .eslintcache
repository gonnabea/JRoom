[{"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\index.tsx":"1","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\reportWebVitals.ts":"2","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\VideoBackground.tsx":"3","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\GlobalStyles.ts":"4","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\App.tsx":"5","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\SkewScrollMenu.tsx":"6","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Home.tsx":"7","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\routes.tsx":"8","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Exhibition.tsx":"9","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeScene.tsx":"10","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Interested.tsx":"11","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\DirectionalLight.ts":"12","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\Window.ts":"13","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\SpotLight.ts":"14","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\LogoBox.ts":"15","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\floor.ts":"16","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\RoofWIndowHole.ts":"17","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\Floor.ts":"18","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\SunLight.ts":"19","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\FontLoader.ts":"20"},{"size":567,"mtime":1610446256210,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1607822105962,"results":"23","hashOfConfig":"22"},{"size":638,"mtime":1608112698128,"results":"24","hashOfConfig":"22"},{"size":259,"mtime":1610446268792,"results":"25","hashOfConfig":"22"},{"size":231,"mtime":1610446252706,"results":"26","hashOfConfig":"22"},{"size":4651,"mtime":1610783046407,"results":"27","hashOfConfig":"22"},{"size":1164,"mtime":1610446245540,"results":"28","hashOfConfig":"22"},{"size":562,"mtime":1610446261138,"results":"29","hashOfConfig":"22"},{"size":486,"mtime":1610951224009,"results":"30","hashOfConfig":"22"},{"size":15836,"mtime":1611153808622,"results":"31","hashOfConfig":"22"},{"size":1636,"mtime":1610446241187,"results":"32","hashOfConfig":"22"},{"size":683,"mtime":1610983118802,"results":"33","hashOfConfig":"22"},{"size":616,"mtime":1611024859115,"results":"34","hashOfConfig":"22"},{"size":758,"mtime":1610983391143,"results":"35","hashOfConfig":"22"},{"size":609,"mtime":1611145070641,"results":"36","hashOfConfig":"22"},{"size":1342,"mtime":1610988274435,"results":"37","hashOfConfig":"22"},{"size":3097,"mtime":1611024865494,"results":"38","hashOfConfig":"22"},{"size":1342,"mtime":1611143703321,"results":"39","hashOfConfig":"22"},{"size":1939,"mtime":1611024848934,"results":"40","hashOfConfig":"22"},{"size":988,"mtime":1611153792512,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"35bok3",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\index.tsx",[],["88","89"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\reportWebVitals.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\VideoBackground.tsx",[],["90","91"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\GlobalStyles.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\App.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\SkewScrollMenu.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Home.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\routes.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Exhibition.tsx",["92"],"import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport ThreeScene from \"../Components/ThreeScene\"\r\n\r\nconst Container = styled.section`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow: auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: white;\r\n  opacity: 1;\r\n  cursor: grab;\r\n  cursor: -moz-grab;\r\n  cursor: -webkit-grab;\r\n`\r\n\r\nconst Exhibition: React.FC = () => {\r\n  return <ThreeScene />\r\n}\r\n\r\nexport default Exhibition\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeScene.tsx",["93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110"],"import React, { useEffect, useRef } from \"react\"\r\nimport * as THREE from \"three\"\r\nimport styled from \"styled-components\"\r\nimport { OrbitControls } from \"three-orbitcontrols-ts\"\r\nimport { GodRaysEffect, RenderPass, EffectPass, EffectComposer } from \"postprocessing\"\r\nimport { BackSide, CubeCamera, DoubleSide, FrontSide } from \"three\"\r\nimport floorImage2 from \"../resources/images/floor2.jpg\"\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\r\nimport { CSG } from \"three-csg-ts\"\r\nimport CSS3D from \"three-css3drenderer\"\r\n\r\n// 이미지 임포트\r\nimport reactLogo from \"../resources/images/reactLogo.jpg\"\r\nimport styledComponentsLogo from \"../resources/images/styledComponents.jpg\"\r\nimport netlifyLogo from \"../resources/images/netlify.jpg\"\r\nimport sunsetImg1 from \"../resources/images/Sunset Backgrounds/sunset12.jpg\"\r\nimport groundImg from \"../resources/images/ground.jpg\"\r\nimport { addWindow } from \"./ThreeModules/Window\"\r\nimport { addDirLight } from \"./ThreeModules/DirectionalLight\"\r\nimport { addSpotLight } from \"./ThreeModules/SpotLight\"\r\nimport { addLogoBox } from \"./ThreeModules/LogoBox\"\r\nimport { addFloor } from \"./ThreeModules/Floor\"\r\nimport { addRoofWindowHole } from \"./ThreeModules/RoofWIndowHole\"\r\nimport { addSunLight } from \"./ThreeModules/SunLight\"\r\nimport { FontLoder } from \"./ThreeModules/FontLoader\"\r\n\r\nconst Container = styled.div`\r\n  cursor: grab;\r\n  cursor: -moz-grab;\r\n  cursor: -webkit-grab;\r\n  :active {\r\n    cursor: grabbing;\r\n  }\r\n`\r\n\r\nexport let camera: THREE.PerspectiveCamera\r\nexport let scene: THREE.Scene\r\nexport let renderer: THREE.WebGLRenderer\r\nlet geometry: THREE.BoxGeometry, material, mesh\r\nlet controls: OrbitControls\r\nexport let composer: { addPass: (arg0: any) => void; render: (arg0: number) => void }\r\nexport let floorCamera: THREE.CubeCamera\r\nexport let floorMesh: THREE.Mesh\r\nlet cssRenderer: {\r\n  setSize: (arg0: number, arg1: number) => void\r\n  domElement: any\r\n  render: (arg0: THREE.Scene, arg1: THREE.PerspectiveCamera) => void\r\n}\r\nlet cssScene: THREE.Scene\r\nconst ThreeScene = () => {\r\n  const ThreeContainer = useRef<HTMLDivElement>(null)\r\n\r\n  function ThreeSceneInit() {\r\n    camera = new THREE.PerspectiveCamera(20, window.innerWidth / window.innerHeight, 1, 21000)\r\n    camera.position.set(0, 0, 5000)\r\n    scene = new THREE.Scene()\r\n    cssRenderer = new CSS3D.CSS3DRenderer()\r\n    cssScene = new THREE.Scene()\r\n    cssRenderer.setSize(window.innerWidth, window.innerHeight)\r\n    cssRenderer.domElement.style.top = 0\r\n    cssRenderer.domElement.style.position = \"absolute\"\r\n    cssRenderer.domElement.style.zIndex = \"5\"\r\n    ThreeContainer?.current?.appendChild(cssRenderer.domElement)\r\n\r\n    // 건물 박스\r\n    const buildingGeometry = new THREE.BoxGeometry(2500, 1000, 3000)\r\n    const buildingTexture = new THREE.TextureLoader()\r\n    const buildingMaterial = new THREE.MeshPhongMaterial({\r\n      color: 0xc2cee9,\r\n      specular: \"blue\",\r\n      flatShading: true,\r\n    })\r\n    const ExhibitionRoom = new THREE.Mesh(buildingGeometry, buildingMaterial)\r\n    ExhibitionRoom.position.set(0, 0, -2500)\r\n\r\n    ExhibitionRoom.material.side = THREE.BackSide // mesh 내부에서도 면이 보이게 만들어 줌.\r\n\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5) // soft white light\r\n\r\n    ambientLight.position.set(0, 6000, 0)\r\n    scene.add(ambientLight)\r\n\r\n    //// 프로젝트 방 (J-Flix) ////\r\n\r\n    const project1Geo = new THREE.BoxGeometry(3000, 1000, 2000)\r\n\r\n    const project1Mat = new THREE.MeshPhongMaterial({ specular: \"orange\", flatShading: true })\r\n    const project1Mesh = new THREE.Mesh(project1Geo, project1Mat)\r\n\r\n    ExhibitionRoom.updateMatrix()\r\n    project1Geo.merge(buildingGeometry, ExhibitionRoom.matrix)\r\n\r\n    const newMesh = new THREE.Mesh(project1Geo, project1Mat)\r\n    newMesh.material.side = THREE.BackSide\r\n    // 윗면 faces 지우기 <- 효율적인 방법 찾기\r\n    newMesh.geometry.faces.splice(4, 2)\r\n    scene.add(newMesh)\r\n\r\n    // 디렉셔널 라이트 (햇빛)\r\n    addDirLight({ x: -1000, y: 2000, z: 2000 }, { x: -500, y: 1000, z: 800 })\r\n\r\n    // 스포트라이트 (창문 통과하는 햇빛)\r\n    addSpotLight({ x: -900, y: 750, z: 800 }, { x: -400, y: -500, z: -100 }, Math.PI / 18)\r\n\r\n    // 바닥\r\n\r\n    addFloor({ width: 3000, height: 2000, x: 0, y: -490, z: 0 })\r\n\r\n    ////\r\n\r\n    // 지붕\r\n    const roofShape = new THREE.Shape()\r\n    roofShape.moveTo(0, 0)\r\n    roofShape.lineTo(1000, 1000) // rotate로 인해 x는 높이, y는 깊이\r\n    roofShape.lineTo(0, 2000)\r\n\r\n    const extrudeSettings = {\r\n      steps: 2,\r\n      depth: 3000, // Z축: 깊이 (rotate로 인해 너비가 됨)\r\n      bevelEnabled: true,\r\n      bevelThickness: 1,\r\n      bevelSize: 1,\r\n      bevelOffset: 0,\r\n      bevelSegments: 1,\r\n    }\r\n\r\n    const roofGeometry = new THREE.ExtrudeGeometry(roofShape, extrudeSettings)\r\n    const roofMaterial = new THREE.MeshPhongMaterial({\r\n      color: 0x8c989c,\r\n      specular: \"orange\",\r\n      flatShading: true,\r\n    })\r\n    roofMaterial.side = THREE.DoubleSide\r\n    const roofMesh = new THREE.Mesh(roofGeometry, roofMaterial)\r\n\r\n    console.log(roofGeometry.faces)\r\n    roofGeometry.faces.splice(20, 4) // 지붕의 밑면 제거\r\n\r\n    // 창문 구멍 뚫기\r\n\r\n    addRoofWindowHole(roofMesh)\r\n\r\n    // GLTF 로더 //\r\n\r\n    // 지붕에 달린 창문 (앞면 3개)\r\n\r\n    addWindow(\r\n      { x: -750, y: 975, z: 500 },\r\n      { x: 400, y: 315, z: 300 },\r\n      { x: -Math.PI / 4, y: -Math.PI, z: 0 }\r\n    ) // Arguments: {position, scale, rotation}\r\n    addWindow(\r\n      { x: 0, y: 975, z: 500 },\r\n      { x: 400, y: 315, z: 300 },\r\n      { x: -Math.PI / 4, y: -Math.PI, z: 0 }\r\n    )\r\n    addWindow(\r\n      { x: 750, y: 975, z: 500 },\r\n      { x: 400, y: 315, z: 300 },\r\n      { x: -Math.PI / 4, y: -Math.PI, z: 0 }\r\n    )\r\n\r\n    // 지붕에 달린 창문 (뒷면 1개)\r\n\r\n    addWindow(\r\n      { x: 0, y: 1050, z: -400 },\r\n      { x: 500, y: 350, z: 300 },\r\n      { x: Math.PI / 4, y: -Math.PI, z: 0 }\r\n    )\r\n\r\n    // 창문 밝히기\r\n    const windowLight = new THREE.RectAreaLight(0xffffff)\r\n    windowLight.position.set(-1000, 1300, 700)\r\n    windowLight.intensity = 200\r\n    windowLight.width = 500\r\n    windowLight.height = 500\r\n    windowLight.lookAt(-750, 975, 500)\r\n    scene.add(windowLight)\r\n\r\n    // 벽에 붙일 책 모형\r\n    const loader = new GLTFLoader()\r\n    loader.load(\"/models/book/scene.gltf\", (gltf) => {\r\n      gltf.scene.scale.set(1000, 1000, 1000)\r\n      gltf.scene.rotateX(Math.PI / 2)\r\n      gltf.scene.position.set(-300, 0, -900)\r\n      scene.add(gltf.scene)\r\n    })\r\n    const bookCoverMesh = new THREE.Mesh(\r\n      new THREE.PlaneBufferGeometry(720, 1000, 40),\r\n      new THREE.MeshPhongMaterial({ color: 0x292a2e, specular: \"orange\", flatShading: true })\r\n    )\r\n    bookCoverMesh.position.set(100, 0, -890)\r\n    bookCoverMesh.material.side = DoubleSide\r\n    scene.add(bookCoverMesh)\r\n    // 책 모형에 붙일 텍스트 geometry\r\n\r\n    FontLoder(\r\n      {\r\n        fontModelUrl: \"/fonts/helvetiker_regular.typeface.json\",\r\n        text: \"J-Flix\",\r\n        size: 80,\r\n        height: 50,\r\n        color: 0x02f6d5,\r\n        bevelSize: 8,\r\n      },\r\n      { x: 100, y: 200, z: -900 }\r\n    )\r\n    // 프로젝트 제목\r\n\r\n    // 제작자 이름\r\n    FontLoder(\r\n      {\r\n        fontModelUrl: \"/fonts/helvetiker_regular.typeface.json\",\r\n        text: \"Made By.Jiwon\",\r\n        size: 35,\r\n        height: 50,\r\n        color: 0xffffff,\r\n        bevelSize: 3,\r\n      },\r\n      { x: 100, y: 100, z: -900 }\r\n    )\r\n    const fontLoader = new THREE.FontLoader()\r\n    fontLoader.load(\"/fonts/helvetiker_regular.typeface.json\", function (font) {\r\n      const geometry = new THREE.TextBufferGeometry(\"Made By.Jiwon\", {\r\n        font: font,\r\n        size: 35,\r\n        height: 50,\r\n        curveSegments: 12,\r\n        bevelEnabled: true,\r\n        bevelThickness: 10,\r\n        bevelSize: 1,\r\n        bevelOffset: 0,\r\n        bevelSegments: 5,\r\n      })\r\n      const material = new THREE.MeshPhongMaterial({\r\n        color: 0xffffff,\r\n        specular: \"orange\",\r\n        flatShading: true,\r\n      })\r\n      const mesh = new THREE.Mesh(geometry, material)\r\n      mesh.position.set(100, 100, -900)\r\n      scene.add(mesh)\r\n    })\r\n\r\n    // 기술스택 박스 만들기\r\n\r\n    addLogoBox({ x: -500, y: 200, z: -840 }, reactLogo)\r\n    addLogoBox({ x: -500, y: -200, z: -840 }, styledComponentsLogo)\r\n    addLogoBox({ x: 700, y: 100, z: -840 }, netlifyLogo)\r\n\r\n    // TV GLTF 모델 로드\r\n\r\n    loader.load(\"/models/2018_flat_screen_tv/scene.gltf\", (gltf) => {\r\n      gltf.scene.scale.set(750, 750, 2000)\r\n      gltf.scene.position.set(-1200, 0, 0)\r\n\r\n      gltf.scene.rotateY(Math.PI / 2)\r\n      scene.add(gltf.scene)\r\n    })\r\n\r\n    // 소파 모델 로드\r\n\r\n    loader.load(\"/models/sofa/scene.gltf\", (gltf) => {\r\n      gltf.scene.scale.set(220, 220, 220)\r\n      gltf.scene.position.set(0, -500, 100)\r\n\r\n      gltf.scene.rotateY(Math.PI)\r\n\r\n      scene.add(gltf.scene)\r\n    })\r\n\r\n    // 팝콘 모델 로드\r\n\r\n    loader.load(\"/models/popcorn_bucket/scene.gltf\", (gltf) => {\r\n      gltf.scene.scale.set(100, 100, 100)\r\n      gltf.scene.position.set(-1000, -500, 850)\r\n\r\n      gltf.scene.rotateY(Math.PI)\r\n      scene.add(gltf.scene)\r\n    })\r\n\r\n    // 자동차 모델 로드\r\n\r\n    loader.load(\"/models/free_porsche_911_carrera_4s/scene.gltf\", (gltf) => {\r\n      gltf.scene.scale.set(300, 300, 300)\r\n      gltf.scene.position.set(-500, -200, 3000)\r\n      scene.add(gltf.scene)\r\n\r\n      const carLight = new THREE.PointLight(0xffffff, 10, 2000)\r\n      carLight.position.set(0, -200, 3000)\r\n      const lightIndicator = new THREE.PointLightHelper(carLight, 300)\r\n      lightIndicator.color = 0x3f83f8\r\n\r\n      const carLight2 = new THREE.PointLight(0x119be3, 10, 2000)\r\n      carLight2.position.set(-1000, -200, 3000)\r\n      const lightIndicator2 = new THREE.PointLightHelper(carLight2, 300)\r\n      lightIndicator2.color = 0x3f83f8\r\n\r\n      const carLight3 = new THREE.PointLight(0xffffff, 10, 3000)\r\n      carLight3.position.set(-500, -200, 4000)\r\n      const lightIndicator3 = new THREE.PointLightHelper(carLight3, 300)\r\n      lightIndicator3.color = 0x3f83f8\r\n\r\n      scene.add(carLight)\r\n      scene.add(lightIndicator)\r\n      scene.add(carLight2)\r\n      scene.add(lightIndicator2)\r\n      scene.add(carLight3)\r\n      scene.add(lightIndicator3)\r\n    })\r\n\r\n    // 노을 배경 박스 생성\r\n    const materialArray = []\r\n    const texture_ft = new THREE.TextureLoader().load(\r\n      \"https://media-exp1.licdn.com/dms/image/C511BAQE0NnIkjkotGA/company-background_10000/0/1541489744017?e=2159024400&v=beta&t=8CzJngJh5TrtF6_WFRYSlDeycAkT52hAfb4qLYGYnv8\"\r\n    )\r\n    const texture_bk = new THREE.TextureLoader().load(\r\n      \"https://media-exp1.licdn.com/dms/image/C511BAQE0NnIkjkotGA/company-background_10000/0/1541489744017?e=2159024400&v=beta&t=8CzJngJh5TrtF6_WFRYSlDeycAkT52hAfb4qLYGYnv8\"\r\n    )\r\n    const texture_up = new THREE.TextureLoader().load(\r\n      \"https://media-exp1.licdn.com/dms/image/C511BAQE0NnIkjkotGA/company-background_10000/0/1541489744017?e=2159024400&v=beta&t=8CzJngJh5TrtF6_WFRYSlDeycAkT52hAfb4qLYGYnv8\"\r\n    )\r\n    const texture_dn = new THREE.TextureLoader().load(groundImg)\r\n\r\n    materialArray.push(new THREE.MeshBasicMaterial({ map: texture_ft }))\r\n    materialArray.push(new THREE.MeshBasicMaterial({ map: texture_ft }))\r\n    materialArray.push(new THREE.MeshBasicMaterial({ map: texture_ft }))\r\n    materialArray.push(new THREE.MeshBasicMaterial({ map: texture_dn }))\r\n    materialArray.push(new THREE.MeshBasicMaterial({ map: texture_ft }))\r\n    materialArray.push(new THREE.MeshBasicMaterial({ map: texture_ft }))\r\n\r\n    const skyboxGeo = new THREE.BoxGeometry(19000, 19000, 19000)\r\n    const skybox = new THREE.Mesh(skyboxGeo, materialArray)\r\n    skybox.position.set(0, 8990, 0)\r\n    materialArray.map((mat) => {\r\n      mat.side = THREE.BackSide\r\n    })\r\n    scene.add(skybox)\r\n\r\n    // 렌더러\r\n    renderer = new THREE.WebGLRenderer({\r\n      antialias: true,\r\n      alpha: true,\r\n      preserveDrawingBuffer: true,\r\n    })\r\n\r\n    renderer.setPixelRatio(window.devicePixelRatio)\r\n    renderer.setSize(window.innerWidth, window.innerHeight)\r\n    renderer.setClearColor(0xffffff, 0.5)\r\n    renderer.domElement.style.position = \"absolute\"\r\n    renderer.domElement.style.top = \"0\"\r\n    renderer.domElement.style.zIndex = \"1\"\r\n\r\n    // Three.js에 html embed 시키기\r\n\r\n    const geometry = new THREE.PlaneBufferGeometry(1400, 800)\r\n\r\n    const material = new THREE.MeshBasicMaterial({\r\n      color: 0xffffff,\r\n      opacity: 0.0,\r\n      side: THREE.DoubleSide,\r\n    })\r\n    const planeMesh = new THREE.Mesh(geometry, material)\r\n    planeMesh.position.set(-1200, 10, 0)\r\n    planeMesh.rotation.set(0, Math.PI / 2, 0)\r\n    scene.add(planeMesh)\r\n\r\n    const embedWebsite = document.createElement(\"iframe\")\r\n    embedWebsite.src = \"https://nomfilx-jiwon.netlify.app/#/\"\r\n    embedWebsite.width = \"1400px\"\r\n    embedWebsite.height = \"800px\"\r\n\r\n    const cssObject = new CSS3D.CSS3DObject(embedWebsite)\r\n    cssObject.position.set(planeMesh.position.x, planeMesh.position.y, planeMesh.position.z)\r\n    cssObject.rotation.set(0, Math.PI / 2, 0)\r\n    cssScene.add(cssObject)\r\n\r\n    // TV 뒷면 가리기 위한 Div Box\r\n\r\n    const memo = document.createElement(\"div\")\r\n    memo.innerHTML = \"Nomflix.Jiwon\"\r\n    memo.style.width = \"1400px\"\r\n    memo.style.height = \"800px\"\r\n    memo.style.backgroundColor = \"black\"\r\n    memo.style.color = \"white\"\r\n    memo.style.fontSize = \"80px\"\r\n\r\n    const memoObject = new CSS3D.CSS3DObject(memo)\r\n    memoObject.position.set(planeMesh.position.x - 2, planeMesh.position.y, planeMesh.position.z)\r\n    memoObject.rotation.set(0, Math.PI / 2, 0)\r\n    cssScene.add(memoObject)\r\n\r\n    // 갓레이이펙트\r\n\r\n    composer = addSunLight({ x: -600, y: 200, z: 100 })\r\n    composer = addSunLight({ x: 200, y: 200, z: 100 })\r\n    composer = addSunLight({ x: 1000, y: 200, z: 100 })\r\n\r\n    controls = new OrbitControls(camera, cssRenderer.domElement)\r\n\r\n    // 마우스 휠로 줌 조절\r\n    controls.dollyOut = function () {\r\n      if (camera.zoom < 5) {\r\n        camera.zoom = camera.zoom + 0.1\r\n        camera.updateProjectionMatrix()\r\n\r\n        console.log(camera.zoom)\r\n      }\r\n    }\r\n    controls.dollyIn = function () {\r\n      if (camera.zoom > 0.2) {\r\n        camera.zoom = camera.zoom - 0.1\r\n        camera.updateProjectionMatrix()\r\n\r\n        console.log(camera.zoom)\r\n      }\r\n    }\r\n\r\n    window.addEventListener(\"click\", () => {\r\n      console.log(camera.position)\r\n    })\r\n\r\n    if (ThreeContainer.current !== null) {\r\n      ThreeContainer.current?.appendChild(renderer.domElement)\r\n      // renderer.setAnimationLoop( animate ); <- GPU 메모리 100% 버그 유발\r\n      animate()\r\n    }\r\n  }\r\n\r\n  setInterval(() => {\r\n    console.log(`${frameCount} fps`)\r\n    frameCount = 0\r\n  }, 1000)\r\n\r\n  let frameCount = 0\r\n  function animate() {\r\n    frameCount += 1\r\n\r\n    cssRenderer.render(cssScene, camera)\r\n    composer.render(0.1)\r\n    // floorCamera.update(renderer, scene) <- GPU 점유율 대폭 상승 유발\r\n    requestAnimationFrame(animate)\r\n  }\r\n\r\n  function resize() {\r\n    if (ThreeContainer.current) {\r\n      cssRenderer.setSize(ThreeContainer.current?.clientWidth, ThreeContainer.current?.clientHeight)\r\n\r\n      renderer.setSize(ThreeContainer.current?.clientWidth, ThreeContainer.current?.clientHeight)\r\n      camera.aspect = ThreeContainer.current?.clientWidth / ThreeContainer.current?.clientHeight\r\n      camera.updateProjectionMatrix()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", resize)\r\n    ThreeSceneInit()\r\n    return () => {\r\n      scene.remove.apply(scene, scene.children)\r\n      ThreeSceneInit()\r\n    }\r\n  })\r\n  return <Container ref={ThreeContainer}></Container>\r\n}\r\n\r\nexport default ThreeScene\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Interested.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\DirectionalLight.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\Window.ts",[],["111","112"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\SpotLight.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\LogoBox.ts",["113"],"import * as THREE from \"three\"\r\nimport { FlatShading } from \"three\"\r\nimport { scene } from \"../ThreeScene\"\r\n\r\nexport const addLogoBox = (position: { x: number; y: number; z: number }, image: string) => {\r\n  const logoBoxGeo = new THREE.BoxBufferGeometry(300, 300, 300)\r\n  const logoBoxTexture = new THREE.TextureLoader().load(image)\r\n  const logoBoxMat = new THREE.MeshBasicMaterial({\r\n    color: 0x8c989c,\r\n\r\n    flatShading: true,\r\n    map: logoBoxTexture,\r\n  })\r\n  const logoBox = new THREE.Mesh(logoBoxGeo, logoBoxMat)\r\n  logoBox.position.set(position.x, position.y, position.z)\r\n  scene.add(logoBox)\r\n}\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\floor.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\RoofWIndowHole.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\Floor.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\SunLight.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\FontLoader.ts",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"114","replacedBy":"118"},{"ruleId":"116","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":5,"column":7,"nodeType":"122","messageId":"123","endLine":5,"endColumn":16},{"ruleId":"120","severity":1,"message":"124","line":5,"column":10,"nodeType":"122","messageId":"123","endLine":5,"endColumn":23},{"ruleId":"120","severity":1,"message":"125","line":5,"column":25,"nodeType":"122","messageId":"123","endLine":5,"endColumn":35},{"ruleId":"120","severity":1,"message":"126","line":5,"column":37,"nodeType":"122","messageId":"123","endLine":5,"endColumn":47},{"ruleId":"120","severity":1,"message":"127","line":5,"column":49,"nodeType":"122","messageId":"123","endLine":5,"endColumn":63},{"ruleId":"120","severity":1,"message":"128","line":6,"column":10,"nodeType":"122","messageId":"123","endLine":6,"endColumn":18},{"ruleId":"120","severity":1,"message":"129","line":6,"column":20,"nodeType":"122","messageId":"123","endLine":6,"endColumn":30},{"ruleId":"120","severity":1,"message":"130","line":6,"column":44,"nodeType":"122","messageId":"123","endLine":6,"endColumn":53},{"ruleId":"120","severity":1,"message":"131","line":7,"column":8,"nodeType":"122","messageId":"123","endLine":7,"endColumn":19},{"ruleId":"120","severity":1,"message":"132","line":9,"column":10,"nodeType":"122","messageId":"123","endLine":9,"endColumn":13},{"ruleId":"120","severity":1,"message":"133","line":16,"column":8,"nodeType":"122","messageId":"123","endLine":16,"endColumn":18},{"ruleId":"120","severity":1,"message":"134","line":39,"column":5,"nodeType":"122","messageId":"123","endLine":39,"endColumn":32},{"ruleId":"120","severity":1,"message":"135","line":39,"column":34,"nodeType":"122","messageId":"123","endLine":39,"endColumn":42},{"ruleId":"120","severity":1,"message":"136","line":39,"column":44,"nodeType":"122","messageId":"123","endLine":39,"endColumn":48},{"ruleId":"120","severity":1,"message":"137","line":67,"column":11,"nodeType":"122","messageId":"123","endLine":67,"endColumn":26},{"ruleId":"120","severity":1,"message":"138","line":88,"column":11,"nodeType":"122","messageId":"123","endLine":88,"endColumn":23},{"ruleId":"120","severity":1,"message":"139","line":317,"column":11,"nodeType":"122","messageId":"123","endLine":317,"endColumn":21},{"ruleId":"120","severity":1,"message":"140","line":320,"column":11,"nodeType":"122","messageId":"123","endLine":320,"endColumn":21},{"ruleId":"141","severity":1,"message":"142","line":335,"column":29,"nodeType":"143","messageId":"144","endLine":335,"endColumn":31},{"ruleId":"114","replacedBy":"145"},{"ruleId":"116","replacedBy":"146"},{"ruleId":"120","severity":1,"message":"147","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":21},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],["148"],["149"],"@typescript-eslint/no-unused-vars","'Container' is assigned a value but never used.","Identifier","unusedVar","'GodRaysEffect' is defined but never used.","'RenderPass' is defined but never used.","'EffectPass' is defined but never used.","'EffectComposer' is defined but never used.","'BackSide' is defined but never used.","'CubeCamera' is defined but never used.","'FrontSide' is defined but never used.","'floorImage2' is defined but never used.","'CSG' is defined but never used.","'sunsetImg1' is defined but never used.","'geometry' is defined but never used.","'material' is defined but never used.","'mesh' is defined but never used.","'buildingTexture' is assigned a value but never used.","'project1Mesh' is assigned a value but never used.","'texture_bk' is assigned a value but never used.","'texture_up' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["148"],["149"],"'FlatShading' is defined but never used.","no-global-assign","no-unsafe-negation"]