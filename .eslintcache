[{"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\index.tsx":"1","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\reportWebVitals.ts":"2","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\GlobalStyles.ts":"3","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\App.tsx":"4","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\routes.tsx":"5","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Books.tsx":"6","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Contact.tsx":"7","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\AboutMe.tsx":"8","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Exhibition.tsx":"9","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Home.tsx":"10","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\TechStack.tsx":"11","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\Header.tsx":"12","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\SkewScrollMenu.tsx":"13","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\ThreeScreens\\ThreeScene.tsx":"14","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\ThreeScreens\\JFlixObjs.ts":"15","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\ThreeScreens\\MainHallObjs.ts":"16","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\ThreeScreens\\OutsideObjs.ts":"17","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\ThreeScreens\\ONObjs.ts":"18","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\ThreeScreens\\JustReadItObjs.ts":"19","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\DirectionalLight.ts":"20","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\SpotLight.ts":"21","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\SunLight.ts":"22","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\FontLoader.ts":"23","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\LogoBox.ts":"24","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\Frame.ts":"25","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\DescriptionBoard.ts":"26","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\floor.ts":"27","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\CeilConnetor.ts":"28","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\RoofWIndowHole.ts":"29","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\SelectBtn.ts":"30","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\Window.ts":"31","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\iframeObj.ts":"32","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\GLTFModelLoader.ts":"33","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\Documents\\WikiHeader.tsx":"34","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\Documents\\WikiSidebar.tsx":"35","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\Documents\\WikiGreeting.tsx":"36","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\Documents\\WikiContentBox.tsx":"37","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Documents\\main.tsx":"38","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Documents\\Main.tsx":"39","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Documents\\Backend.tsx":"40","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Documents\\Frontend.tsx":"41","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Documents\\3d-game.tsx":"42","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Documents\\Android.tsx":"43","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Documents\\CommonWiki.tsx":"44","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Documents\\Computer-Vision.tsx":"45","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Documents\\Network.tsx":"46","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\Documents\\WikiDictionary.tsx":"47","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Documents\\styles\\common-styles.ts":"48","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\Books\\3D-Book.tsx":"49"},{"size":567,"mtime":1610446256210,"results":"50","hashOfConfig":"51"},{"size":425,"mtime":1607822105962,"results":"52","hashOfConfig":"51"},{"size":303,"mtime":1615724938301,"results":"53","hashOfConfig":"51"},{"size":231,"mtime":1610446252706,"results":"54","hashOfConfig":"51"},{"size":1906,"mtime":1615693397210,"results":"55","hashOfConfig":"51"},{"size":4638,"mtime":1615836735877,"results":"56","hashOfConfig":"51"},{"size":95,"mtime":1615685165754,"results":"57","hashOfConfig":"51"},{"size":96,"mtime":1615660642211,"results":"58","hashOfConfig":"51"},{"size":622,"mtime":1615690520851,"results":"59","hashOfConfig":"51"},{"size":3165,"mtime":1615664805287,"results":"60","hashOfConfig":"51"},{"size":1873,"mtime":1615660727096,"results":"61","hashOfConfig":"51"},{"size":663,"mtime":1613649316794,"results":"62","hashOfConfig":"51"},{"size":6282,"mtime":1615725036337,"results":"63","hashOfConfig":"51"},{"size":13067,"mtime":1615518170989,"results":"64","hashOfConfig":"51"},{"size":9360,"mtime":1615500997120,"results":"65","hashOfConfig":"51"},{"size":3584,"mtime":1615478978916,"results":"66","hashOfConfig":"51"},{"size":275,"mtime":1615556256581,"results":"67","hashOfConfig":"51"},{"size":3523,"mtime":1615662284771,"results":"68","hashOfConfig":"51"},{"size":4158,"mtime":1615662306730,"results":"69","hashOfConfig":"51"},{"size":1123,"mtime":1615406359848,"results":"70","hashOfConfig":"51"},{"size":781,"mtime":1615406367319,"results":"71","hashOfConfig":"51"},{"size":2142,"mtime":1615478899113,"results":"72","hashOfConfig":"51"},{"size":1151,"mtime":1615662269749,"results":"73","hashOfConfig":"51"},{"size":705,"mtime":1615414674404,"results":"74","hashOfConfig":"51"},{"size":2988,"mtime":1615478922576,"results":"75","hashOfConfig":"51"},{"size":2505,"mtime":1615549322545,"results":"76","hashOfConfig":"51"},{"size":1475,"mtime":1615406371291,"results":"77","hashOfConfig":"51"},{"size":1076,"mtime":1615406355050,"results":"78","hashOfConfig":"51"},{"size":3620,"mtime":1615406363998,"results":"79","hashOfConfig":"51"},{"size":7775,"mtime":1615549312998,"results":"80","hashOfConfig":"51"},{"size":649,"mtime":1615478882639,"results":"81","hashOfConfig":"51"},{"size":2064,"mtime":1615549344167,"results":"82","hashOfConfig":"51"},{"size":732,"mtime":1615406362799,"results":"83","hashOfConfig":"51"},{"size":1511,"mtime":1615723234005,"results":"84","hashOfConfig":"51"},{"size":1569,"mtime":1615722002449,"results":"85","hashOfConfig":"51"},{"size":652,"mtime":1615819797084,"results":"86","hashOfConfig":"51"},{"size":1132,"mtime":1615742809485,"results":"87","hashOfConfig":"51"},{"size":34334,"mtime":1615692679038,"results":"88","hashOfConfig":"51"},{"size":11745,"mtime":1615825409177,"results":"89","hashOfConfig":"51"},{"size":5236,"mtime":1615774974899,"results":"90","hashOfConfig":"51"},{"size":7550,"mtime":1615775019473,"results":"91","hashOfConfig":"51"},{"size":1635,"mtime":1615775712295,"results":"92","hashOfConfig":"51"},{"size":1627,"mtime":1615775709267,"results":"93","hashOfConfig":"51"},{"size":1733,"mtime":1615775704664,"results":"94","hashOfConfig":"51"},{"size":1658,"mtime":1615775701744,"results":"95","hashOfConfig":"51"},{"size":4952,"mtime":1615775402996,"results":"96","hashOfConfig":"51"},{"size":10604,"mtime":1615818277557,"results":"97","hashOfConfig":"51"},{"size":940,"mtime":1615774916778,"results":"98","hashOfConfig":"51"},{"size":5751,"mtime":1615836832869,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"35bok3",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"102"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"102"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\index.tsx",[],["215","216"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\reportWebVitals.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\GlobalStyles.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\App.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\routes.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Books.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Contact.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\AboutMe.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Exhibition.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Home.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\TechStack.tsx",["217"],"import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Header from \"../Components/Header\"\r\nimport SkeletonScrollMenu from \"../Components/SkewScrollMenu\"\r\n\r\nconst Container = styled.section`\r\n  overflow: auto;\r\n`\r\n\r\nconst Sidebar = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n`\r\n\r\nconst TechStack = () => {\r\n  return (\r\n    <Container>\r\n      <Header title=\"사용 기술\" />\r\n      <Sidebar></Sidebar>\r\n      <h1>My Stack</h1>\r\n      <h2>언어</h2>\r\n      <ul>\r\n        <li>HTML & CSS</li>\r\n        <li>Javascript</li>\r\n        <li>TypeScript</li>\r\n        <li>Python</li>\r\n      </ul>\r\n      <h2>프로토콜</h2>\r\n      <ul>\r\n        <li>WebRTC</li>\r\n        <li>WebSocket</li>\r\n        <li>HTTP</li>\r\n      </ul>\r\n      <h2>데이터베이스/ORM</h2>\r\n      <ul>\r\n        <li>MongoDB</li>\r\n        <li>MySQL</li>\r\n        <li>PostgresQL</li>\r\n        <li>TypeORM</li>\r\n        <li>Sequelize</li>\r\n      </ul>\r\n      <h2>서버/프레임워크</h2>\r\n      <ul>\r\n        <li>NodeJS</li>\r\n        <li>Express.js</li>\r\n        <li>Nest.js</li>\r\n        <li>Flask</li>\r\n      </ul>\r\n      <h2>웹프레임워크/라이브러리</h2>\r\n      <ul>\r\n        <li>React (hooks)</li>\r\n        <li>Webpack</li>\r\n        <li>Babel</li>\r\n        <li>Tailwind css</li>\r\n        <li>GraphQL</li>\r\n        <li>Three.js</li>\r\n      </ul>\r\n      <h2>컴퓨터비전</h2>\r\n      <li>OpenCV-Python</li>\r\n\r\n      <h2>테스팅</h2>\r\n      <ul>\r\n        <li>Jest</li>\r\n        <li>React Testing Library</li>\r\n        <li>Cypress</li>\r\n      </ul>\r\n\r\n      <h1>Now I'm interested in...</h1>\r\n      <ul>\r\n        <li>OpenCV</li>\r\n        <li>Git & Github</li>\r\n        <li>AWS</li>\r\n        <li>Webpack</li>\r\n        <li>Redux</li>\r\n        <li>Kotlin</li>\r\n        <li>C</li>\r\n        <li>Blockchain</li>\r\n      </ul>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default TechStack\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\Header.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\SkewScrollMenu.tsx",["218","219"],"import React, { useEffect, useRef, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Container = styled.div`\r\n  background-color: ${(props) => props.color};\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n`\r\n\r\nconst TextContainer = styled.div`\r\n  width: 80vw;\r\n  height: 90vh;\r\n  position: fixed;\r\n  opacity: 0.7;\r\n  z-index: 1;\r\n  top: 10%;\r\n  right: 0%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  overflow: auto;\r\n  scroll-behavior: smooth;\r\n  ::-webkit-scrollbar {\r\n    width: 0px; /* Remove scrollbar space */\r\n    background: transparent; /* Optional: just make scrollbar invisible */\r\n  }\r\n`\r\n\r\nconst TextArea = styled(Link)`\r\n  color: black;\r\n  width: 100%;\r\n  font-size: 10.5vw;\r\n  height: 20%;\r\n  display: flex;\r\n  justify-content: center;\r\n  text-decoration: none;\r\n  /* Prefix required. Even Firefox only supports the -webkit- prefix */\r\n  font-family: fantasy;\r\n  margin-bottom: 80px;\r\n  -webkit-text-stroke: 4px black;\r\n  -webkit-text-fill-color: transparent;\r\n  transition: -webkit-text-fill-color 0.5s;\r\n\r\n  :hover {\r\n    -webkit-text-fill-color: ${(props) => props.color};\r\n    cursor: pointer;\r\n  }\r\n  @keyframes inclineTexts {\r\n    0% {\r\n      transform: skew(0deg);\r\n    }\r\n    100% {\r\n      transform: skew(-10deg);\r\n    }\r\n  }\r\n\r\n  @keyframes revertIncline {\r\n    0% {\r\n      transform: skew(-10deg);\r\n    }\r\n    100% {\r\n      transform: skew(0deg);\r\n    }\r\n  }\r\n\r\n  @keyframes InclineTextsLeft {\r\n    0% {\r\n      transform: skew(0deg);\r\n    }\r\n    100% {\r\n      transform: skew(10deg);\r\n    }\r\n  }\r\n\r\n  @keyframes revertInclineLeft {\r\n    0% {\r\n      transform: skew(10deg);\r\n    }\r\n    100% {\r\n      transform: skew(0deg);\r\n    }\r\n  }\r\n`\r\n\r\n// anchor 링크가 필요한 경우\r\nconst TextAreaAnchor = styled.a`\r\n  color: black;\r\n  width: 100%;\r\n  font-size: 10.5vw;\r\n  height: 20%;\r\n  display: flex;\r\n  justify-content: center;\r\n  text-decoration: none;\r\n  /* Prefix required. Even Firefox only supports the -webkit- prefix */\r\n  font-family: fantasy;\r\n  margin-bottom: 80px;\r\n  -webkit-text-stroke: 4px black;\r\n  -webkit-text-fill-color: transparent;\r\n  transition: -webkit-text-fill-color 0.5s;\r\n\r\n  :hover {\r\n    -webkit-text-fill-color: ${(props) => props.color};\r\n    cursor: pointer;\r\n  }\r\n  @keyframes inclineTexts {\r\n    0% {\r\n      transform: skew(0deg);\r\n    }\r\n    100% {\r\n      transform: skew(-10deg);\r\n    }\r\n  }\r\n\r\n  @keyframes revertIncline {\r\n    0% {\r\n      transform: skew(-10deg);\r\n    }\r\n    100% {\r\n      transform: skew(0deg);\r\n    }\r\n  }\r\n\r\n  @keyframes InclineTextsLeft {\r\n    0% {\r\n      transform: skew(0deg);\r\n    }\r\n    100% {\r\n      transform: skew(10deg);\r\n    }\r\n  }\r\n\r\n  @keyframes revertInclineLeft {\r\n    0% {\r\n      transform: skew(10deg);\r\n    }\r\n    100% {\r\n      transform: skew(0deg);\r\n    }\r\n  }\r\n`\r\n\r\nconst Video = styled.video`\r\n  width: 70%;\r\n  height: 70%;\r\n  object-fit: fill;\r\n\r\n  box-shadow: 0px 0px 200px #68b793;\r\n`\r\n\r\ninterface IProps {\r\n  texts: Array<string>\r\n  colors: Array<string>\r\n  videoList: Array<string>\r\n  links: Array<string>\r\n}\r\n\r\n// 스크롤 시 글자 기울이는 애니메이션\r\nconst inclinetexts = () => {\r\n  const textContainer = document.getElementById(\"textContainer\")\r\n  textContainer?.addEventListener(\"wheel\", () => {\r\n    if (textContainer.scrollTop > 0) {\r\n      textContainer.style.animation = \"\"\r\n      const originPosition = textContainer.scrollTop + textContainer.scrollHeight\r\n      let currentPosition\r\n\r\n      setTimeout(() => {\r\n        currentPosition = textContainer.scrollTop + textContainer.scrollHeight\r\n\r\n        // 스크롤을 내릴 때\r\n        if (originPosition <= currentPosition) {\r\n          textContainer.style.animation = `inclineTexts 1s forwards`\r\n          setTimeout(() => {\r\n            textContainer.style.animation = `revertIncline 3s forwards`\r\n          }, 0)\r\n        }\r\n        // 스크롤을 올릴 때\r\n        else if (originPosition > currentPosition) {\r\n          textContainer.style.animation = `InclineTextsLeft 1s forwards`\r\n          setTimeout(() => {\r\n            textContainer.style.animation = `revertInclineLeft 3s forwards`\r\n          }, 0)\r\n        }\r\n      }, 50)\r\n    }\r\n  })\r\n}\r\n\r\nconst SkewScrollMenu: React.FC<IProps> = ({ texts, colors, videoList, links }) => {\r\n  const [videoIndex, setvideoIndex] = useState(0) // 화면에 나오는 비디오를 선택하기 위한 index 값\r\n  const background = useRef(null)\r\n  const video = useRef<HTMLVideoElement>(null)\r\n\r\n  const handleTexts: Function = (\r\n    texts: Array<string>,\r\n    colors: Array<string>,\r\n    links: Array<string>\r\n  ) => {\r\n    // props 전달 안되는 문제 고쳐야함\r\n\r\n    return texts.map((text, index) => {\r\n      if (index != 1 && index != 6) {\r\n        return (\r\n          <TextArea\r\n            to={links[index]}\r\n            onMouseOver={(e) => selectVideo(e, index, colors)}\r\n            className=\"textAreas\"\r\n            color={colors[index]}\r\n          >\r\n            {text}\r\n          </TextArea>\r\n        )\r\n      } else {\r\n        return (\r\n          <TextAreaAnchor\r\n            href={links[index]}\r\n            onMouseOver={(e) => selectVideo(e, index, colors)}\r\n            className=\"textAreas\"\r\n            color={colors[index]}\r\n            target=\"_blank\"\r\n          >\r\n            {text}\r\n          </TextAreaAnchor>\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  const selectVideo = (e: any, index: number, colors: string[]) => {\r\n    setvideoIndex(index)\r\n\r\n    if (video.current !== null) {\r\n      video.current.style.boxShadow = `0px 0px 200px ${colors[index]}`\r\n    }\r\n    console.log(e.target)\r\n\r\n    if (background.current) {\r\n      ;(background.current as any).style.backgroundColor = colors[index]\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    inclinetexts()\r\n  }, [])\r\n\r\n  return (\r\n    <Container ref={background}>\r\n      <TextContainer id=\"textContainer\">{handleTexts(texts, colors, links)}</TextContainer>\r\n      <Video\r\n        src={videoList[videoIndex]}\r\n        ref={video}\r\n        onContextMenu={(e) => e.preventDefault()}\r\n        autoPlay\r\n        muted\r\n        loop\r\n      ></Video>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SkewScrollMenu\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\ThreeScreens\\ThreeScene.tsx",["220","221","222","223","224","225","226","227","228"],"import React, { useEffect, useRef } from \"react\"\r\nimport * as THREE from \"three\"\r\nimport styled from \"styled-components\"\r\nimport { OrbitControls } from \"three-orbitcontrols-ts\"\r\nimport CSS3D from \"three-css3drenderer\"\r\nimport { addDirLight } from \"../../Components/ThreeModules/DirectionalLight\"\r\nimport { addSpotLight } from \"../../Components/ThreeModules/SpotLight\"\r\nimport { addSunLight } from \"../../Components/ThreeModules/SunLight\"\r\nimport { JFlixObjects } from \"./JFlixObjs\"\r\nimport { CSG } from \"three-csg-ts\"\r\nimport MainHallObjects from \"./MainHallObjs\"\r\nimport { JustReadItObjs } from \"./JustReadItObjs\"\r\nimport onObjects from \"./ONObjs\"\r\nimport addIframeObj from \"../../Components/ThreeModules/iframeObj\"\r\nimport outsideObjs from \"./OutsideObjs\"\r\n\r\nconst Container = styled.section`\r\n  width: 100%;\r\n  height: 100%;\r\n  cursor: grab;\r\n  cursor: -moz-grab;\r\n  cursor: -webkit-grab;\r\n  :active {\r\n    cursor: grabbing;\r\n  }\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-self: center;\r\n`\r\n\r\nexport let camera: THREE.PerspectiveCamera\r\nexport let scene: THREE.Scene\r\nexport let renderer: THREE.WebGLRenderer\r\nexport let controls: OrbitControls\r\nexport let composer: { addPass: (arg0: any) => void; render: (arg0: number) => void }\r\nexport let floorCamera: THREE.CubeCamera\r\nexport let floorMesh: THREE.Mesh\r\nlet cssRenderer: {\r\n  setSize: (arg0: number, arg1: number) => void\r\n  domElement: any\r\n  render: (arg0: THREE.Scene, arg1: THREE.PerspectiveCamera) => void\r\n}\r\nexport let cssScene: THREE.Scene\r\nexport let selectBtnObjs: any[] = []\r\nlet raycaster = new THREE.Raycaster()\r\nlet mouse = new THREE.Vector2()\r\nexport let embedWebsite: HTMLIFrameElement\r\n\r\nlet frameCount = 0\r\nconst ThreeScene = () => {\r\n  const ThreeContainer = useRef<HTMLDivElement>(null)\r\n\r\n  // 작동이 안되어 고칠 필요가 있음\r\n  function resize() {\r\n    if (ThreeContainer.current) {\r\n      // cssRenderer.setSize(ThreeContainer.current?.clientWidth, ThreeContainer.current?.clientHeight)\r\n      // renderer.setSize(ThreeContainer.current?.clientWidth, ThreeContainer.current?.clientHeight)\r\n      // camera.aspect = ThreeContainer.current?.clientWidth / ThreeContainer.current?.clientHeight\r\n      // camera.updateProjectionMatrix()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    camera = new THREE.PerspectiveCamera(10, window.innerWidth / window.innerHeight, 1, 100000)\r\n    camera.position.set(-2773.8192101111504, 490.0248603839669, 9020.7527992239675)\r\n    camera.zoom = 0.5\r\n    camera.updateProjectionMatrix()\r\n    camera.updateMatrix()\r\n    scene = new THREE.Scene()\r\n    cssRenderer = new CSS3D.CSS3DRenderer()\r\n    cssScene = new THREE.Scene()\r\n    if (window.matchMedia(\"(max-width:800)\").matches) {\r\n      cssRenderer.setSize(window.innerWidth, window.innerHeight)\r\n    } else {\r\n      cssRenderer.setSize(window.innerWidth, window.innerHeight)\r\n    }\r\n    cssRenderer.domElement.style.top = 0\r\n    cssRenderer.domElement.style.position = \"absolute\"\r\n    cssRenderer.domElement.style.zIndex = \"5\"\r\n    ThreeContainer?.current?.appendChild(cssRenderer.domElement)\r\n\r\n    // 메인 홀\r\n    const buildingGeometry = new THREE.BoxGeometry(3000, 1000, 3000, 1, 1, 1)\r\n    const buildingBuffGeometry = new THREE.BufferGeometry().fromGeometry(buildingGeometry)\r\n    const buildingTexture = new THREE.TextureLoader()\r\n    const buildingMaterial = new THREE.MeshPhongMaterial({\r\n      color: 0x4e61ff,\r\n      specular: \"blue\",\r\n      flatShading: true,\r\n    })\r\n    const ExhibitionRoom = new THREE.Mesh(buildingBuffGeometry, buildingMaterial)\r\n    ExhibitionRoom.position.set(0, 0, -2510)\r\n\r\n    ExhibitionRoom.material.side = THREE.BackSide // mesh 내부에서만 면이 보이게 만들어 줌.\r\n\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.2) // soft white light\r\n\r\n    ambientLight.position.set(0, 0, 0)\r\n    scene.add(ambientLight)\r\n\r\n    //// 프로젝트 방 (J-Flix) ////\r\n\r\n    const project1Geo = new THREE.BoxGeometry(3000, 1000, 2000, 1, 1, 1)\r\n    const project1Mat = new THREE.MeshPhongMaterial({\r\n      color: 0x8af4eb,\r\n      specular: \"orange\",\r\n      flatShading: true,\r\n    })\r\n\r\n    ExhibitionRoom.updateMatrix()\r\n\r\n    project1Geo.merge(buildingGeometry, ExhibitionRoom.matrix)\r\n\r\n    const totalMesh = new THREE.Mesh(project1Geo, project1Mat)\r\n    totalMesh.material.side = THREE.BackSide\r\n    // netlify에서 geometry.faces 프로퍼티를 인식하지 못하여 조치\r\n    // 윗면 faces 지우기 <- 효율적인 방법 찾기\r\n    ;(totalMesh as any).geometry.faces.splice(4, 2)\r\n\r\n    // J-Flix 방문 구멍내기\r\n    const JFlixDoorHole = new THREE.Mesh(\r\n      new THREE.BoxBufferGeometry(380, 1500, 100, 1, 1, 1),\r\n      new THREE.MeshBasicMaterial()\r\n    )\r\n    JFlixDoorHole.position.set(1200, -500, -1000)\r\n\r\n    JFlixDoorHole.updateMatrix()\r\n    totalMesh.updateMatrix()\r\n    const bspJFlixDoorHole = CSG.fromMesh(JFlixDoorHole)\r\n    const bspJFlixRoom = CSG.fromMesh(totalMesh)\r\n\r\n    const bspJFlixResult = bspJFlixRoom.subtract(bspJFlixDoorHole)\r\n\r\n    const bspJFlixMeshResult = CSG.toMesh(bspJFlixResult, totalMesh.matrix)\r\n\r\n    bspJFlixMeshResult.material = totalMesh.material\r\n    bspJFlixMeshResult.updateMatrix()\r\n\r\n    // netlify에서 geometry.faces 프로퍼티를 인식하지 못하여 조치\r\n    // face 목록 중 가장 끝의 것들만 제거하면 패인 부분을 제거할 수 있음\r\n    ;(bspJFlixMeshResult as any).geometry.faces.splice(85, 20)\r\n\r\n    // 메인 홀 창문 구멍내기\r\n    const mainRoomHole = new THREE.Mesh(\r\n      new THREE.BoxBufferGeometry(500, 700, 100, 1, 1, 1),\r\n      new THREE.MeshBasicMaterial()\r\n    )\r\n    mainRoomHole.position.set(0, 100, -4000)\r\n\r\n    mainRoomHole.updateMatrix()\r\n    const bspMainRoomHole = CSG.fromMesh(mainRoomHole)\r\n    const bspMainRoom = CSG.fromMesh(bspJFlixMeshResult)\r\n\r\n    const bspMainRoomResult = bspMainRoom.subtract(bspMainRoomHole)\r\n    const bspMainRoomMesh = CSG.toMesh(bspMainRoomResult, bspJFlixMeshResult.matrix)\r\n\r\n    bspMainRoomMesh.material = bspJFlixMeshResult.material\r\n    bspMainRoomMesh.updateMatrix()\r\n\r\n    // netlify에서 geometry.faces 프로퍼티를 인식하지 못하여 조치\r\n    // face 목록 중 가장 끝의 것들만 제거하면 패인 부분을 제거할 수 있음\r\n    ;(bspMainRoomMesh as any).geometry.faces.splice(180, 20)\r\n    bspMainRoomMesh.castShadow = true\r\n    bspMainRoomMesh.receiveShadow = true\r\n    scene.add(bspMainRoomMesh)\r\n\r\n    //// 프로젝트 방 (Our-Now) ////\r\n\r\n    const project2Geo = new THREE.BoxGeometry(3000, 2000, 3000, 1, 1, 1)\r\n\r\n    const project2buffGeo = new THREE.BufferGeometry().fromGeometry(project2Geo)\r\n    const project2Mat = new THREE.MeshPhongMaterial({\r\n      color: 0x344aff,\r\n      specular: \"purple\",\r\n      flatShading: true,\r\n    })\r\n    const project2Mesh = new THREE.Mesh(project2buffGeo, project2Mat)\r\n\r\n    project2Mesh.position.set(3010, 500, -2490)\r\n    project2Mesh.material.side = THREE.DoubleSide\r\n\r\n    scene.add(project2Mesh)\r\n\r\n    //// 프로젝트 방 (Just-Read-It) ////\r\n\r\n    const project3Geo = new THREE.BoxGeometry(2900, 2000, 3000, 1, 1, 1)\r\n    const project3BuffGeo = new THREE.BufferGeometry().fromGeometry(project3Geo)\r\n    const project3Mat = new THREE.MeshPhongMaterial({\r\n      color: 0xff9500,\r\n      specular: \"black\",\r\n      flatShading: true,\r\n    })\r\n    const project3Mesh = new THREE.Mesh(project3Geo, project3Mat)\r\n\r\n    project3Mesh.position.set(-2960, 500, -2490)\r\n    project3Mesh.material.side = THREE.DoubleSide\r\n\r\n    scene.add(project3Mesh)\r\n\r\n    // 디렉셔널 라이트 (햇빛)\r\n    addDirLight({ x: -1000, y: 2000, z: 2000 }, { x: -500, y: 1000, z: 800 })\r\n\r\n    addDirLight({ x: 0, y: 2000, z: -2000 }, { x: 0, y: 1000, z: 0 })\r\n\r\n    // 스포트라이트 (창문 통과하는 햇빛)\r\n    addSpotLight({ x: -900, y: 750, z: 800 }, { x: -400, y: -500, z: -100 }, Math.PI / 18)\r\n\r\n    // main area 지붕\r\n\r\n    const roofShape = new THREE.Shape()\r\n    roofShape.moveTo(-4500, 1500)\r\n    roofShape.lineTo(0, 3000) // rotate로 인해 x는 높이, y는 깊이\r\n    roofShape.lineTo(4500, 1500)\r\n    const extrudeSettings = {\r\n      steps: 2,\r\n      depth: 4000, // Z축: 깊이 (rotate로 인해 너비가 됨)\r\n      bevelEnabled: true,\r\n      bevelThickness: 1,\r\n      bevelSize: 1,\r\n      bevelOffset: 0,\r\n      bevelSegments: 1,\r\n      curveSegments: 1,\r\n    }\r\n\r\n    const roofGeometry = new THREE.ExtrudeGeometry(roofShape, extrudeSettings)\r\n    const roofMaterial = new THREE.MeshPhongMaterial({\r\n      color: 0x24292e,\r\n      specular: \"orange\",\r\n      flatShading: true,\r\n    })\r\n    roofMaterial.side = THREE.DoubleSide\r\n    const roofMesh = new THREE.Mesh(roofGeometry, roofMaterial)\r\n    roofMesh.position.set(0, 0, -4000)\r\n    scene.add(roofMesh)\r\n\r\n    // 프로젝트별로 구분\r\n    JFlixObjects()\r\n    MainHallObjects()\r\n    JustReadItObjs()\r\n    onObjects()\r\n    outsideObjs()\r\n\r\n    // 렌더러\r\n    renderer = new THREE.WebGLRenderer({\r\n      powerPreference: \"high-performance\",\r\n      antialias: false,\r\n      stencil: false,\r\n      depth: false,\r\n      alpha: true,\r\n    })\r\n\r\n    // renderer.shadowMap.enabled = true\r\n\r\n    // renderer.shadowMap.type = THREE.PCFSoftShadowMap\r\n\r\n    // 성능 최적화를 위한 화면 크기별 해상도 조정\r\n    if (window.matchMedia(\"(max-width: 500px)\").matches) {\r\n      // 모바일 기기 대비\r\n      renderer.setPixelRatio(window.devicePixelRatio / 2)\r\n    } else if (window.matchMedia(\"(max-width: 800px)\").matches) {\r\n      renderer.setPixelRatio(window.devicePixelRatio)\r\n    } else if (window.matchMedia(\"(max-width: 1200px)\")) {\r\n      renderer.setPixelRatio(window.devicePixelRatio / 1.5)\r\n    } else {\r\n      renderer.setPixelRatio(window.devicePixelRatio / 2)\r\n    }\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight)\r\n    renderer.setClearColor(0xffffff, 1)\r\n    renderer.domElement.style.position = \"absolute\"\r\n    renderer.domElement.style.top = \"0\"\r\n    renderer.domElement.style.zIndex = \"1\"\r\n\r\n    // 갓레이이펙트\r\n\r\n    composer = addSunLight({ x: -600, y: 200, z: 100 })\r\n    composer = addSunLight({ x: 200, y: 200, z: 100 })\r\n    composer = addSunLight({ x: 1000, y: 200, z: 100 })\r\n\r\n    controls = new OrbitControls(camera, cssRenderer.domElement)\r\n\r\n    // 마우스 휠로 줌 조절\r\n    // 확대\r\n    controls.dollyOut = function () {\r\n      if (camera.zoom < 5) {\r\n        camera.zoom = camera.zoom + 0.05\r\n        camera.updateProjectionMatrix()\r\n\r\n        // 카메라 줌에 따른 버튼 크기 조정\r\n        if (selectBtnObjs) {\r\n          selectBtnObjs.map((selectBtnObj) => {\r\n            if (selectBtnObj.scale.x > 1) {\r\n              selectBtnObj.scale.set(\r\n                selectBtnObj.scale.x - 0.3,\r\n                selectBtnObj.scale.y - 0.3,\r\n                selectBtnObj.scale.z - 0.3\r\n              )\r\n            }\r\n          })\r\n        }\r\n      }\r\n    }\r\n    // 축소\r\n    controls.dollyIn = function () {\r\n      if (camera.zoom > 0.2) {\r\n        camera.zoom = camera.zoom - 0.05\r\n        console.log(camera.zoom)\r\n        // 카메라 줌에 따른 버튼 크기 조정\r\n        if (selectBtnObjs) {\r\n          selectBtnObjs.map((selectBtnObj) => {\r\n            if (camera.zoom < 0.5 && selectBtnObj.scale.x < 1.5) {\r\n              selectBtnObj.scale.set(\r\n                selectBtnObj.scale.x + 0.3,\r\n                selectBtnObj.scale.y + 0.3,\r\n                selectBtnObj.scale.z + 0.3\r\n              )\r\n            }\r\n          })\r\n        }\r\n\r\n        camera.updateProjectionMatrix()\r\n      }\r\n    }\r\n\r\n    // 카메라 회전시 버튼이 정면에서 보이도록 회전\r\n    window.addEventListener(\"mousedown\", function () {\r\n      if (selectBtnObjs) {\r\n        selectBtnObjs.map((selectBtnObj) => {\r\n          selectBtnObj.rotation.set(camera.rotation.x, camera.rotation.y, camera.rotation.z)\r\n        })\r\n      }\r\n\r\n      window.onmousemove = function () {\r\n        if (selectBtnObjs) {\r\n          selectBtnObjs.map((selectBtnObj) => {\r\n            selectBtnObj.rotation.set(camera.rotation.x, camera.rotation.y, camera.rotation.z)\r\n          })\r\n        }\r\n      }\r\n    })\r\n\r\n    window.addEventListener(\"mouseup\", function () {\r\n      window.onmousemove = null\r\n    })\r\n\r\n    if (ThreeContainer.current !== null) {\r\n      ThreeContainer.current?.appendChild(renderer.domElement)\r\n      // renderer.setAnimationLoop( animate ); <- GPU 메모리 100% 버그 유발\r\n      animate()\r\n    }\r\n\r\n    setInterval(() => {\r\n      console.log(`${frameCount} fps`)\r\n      frameCount = 0\r\n    }, 1000)\r\n\r\n    function animate() {\r\n      frameCount += 1\r\n\r\n      cssRenderer.render(cssScene, camera)\r\n      composer.render(1)\r\n      // floorCamera.update(renderer, scene) <- GPU 점유율 대폭 상승 유발\r\n\r\n      requestAnimationFrame(animate)\r\n    }\r\n\r\n    window.addEventListener(\"resize\", resize)\r\n\r\n    return () => {\r\n      animate()\r\n      scene.remove.apply(scene, scene.children)\r\n    }\r\n  }, [])\r\n  return <Container id=\"container\" ref={ThreeContainer}></Container>\r\n}\r\n\r\nexport default ThreeScene\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\ThreeScreens\\JFlixObjs.ts",["229","230"],"import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\r\nimport { scene } from \"./ThreeScene\"\r\nimport { FontLoder } from \"../../Components/ThreeModules/FontLoader\"\r\nimport { addLogoBox } from \"../../Components/ThreeModules/LogoBox\"\r\n\r\nimport reactLogo from \"../../resources/images/reactLogo.jpg\"\r\nimport styledComponentsLogo from \"../../resources/images/styledComponents.jpg\"\r\nimport netlifyLogo from \"../../resources/images/netlify.jpg\"\r\nimport jsLogo from \"../../resources/images/vanillajs.png\"\r\nimport { addCeilConnector } from \"../../Components/ThreeModules/CeilConnetor\"\r\nimport { addFrame } from \"../../Components/ThreeModules/Frame\"\r\nimport * as THREE from \"three\"\r\n\r\nimport addDescriptionBoard from \"../../Components/ThreeModules/DescriptionBoard\"\r\nimport { addRoofWindowHole } from \"../../Components/ThreeModules/RoofWIndowHole\"\r\nimport { addWindow } from \"../../Components/ThreeModules/Window\"\r\nimport { addSelectBtn } from \"../../Components/ThreeModules/SelectBtn\"\r\nimport { addFloor } from \"../../Components/ThreeModules/floor\"\r\nimport nomadLogo from \"../../resources/images/nomadLogo.png\"\r\nimport floorImage3 from \"../../resources/images/floor3.jpg\"\r\nimport addIframeObj from \"../../Components/ThreeModules/iframeObj\"\r\nexport const JFlixObjects = () => {\r\n  // J-Flix 지붕\r\n  const roofShape = new THREE.Shape()\r\n  roofShape.moveTo(0, 0)\r\n  roofShape.lineTo(1000, 0) // rotate로 인해 x는 높이, y는 깊이\r\n  roofShape.lineTo(1000, 1000)\r\n  roofShape.lineTo(0, 2000)\r\n\r\n  const extrudeSettings = {\r\n    steps: 2,\r\n    depth: 3000, // Z축: 깊이 (rotate로 인해 너비가 됨)\r\n    bevelEnabled: true,\r\n    bevelThickness: 1,\r\n    bevelSize: 1,\r\n    bevelOffset: 0,\r\n    bevelSegments: 1,\r\n  }\r\n\r\n  const roofGeometry = new THREE.ExtrudeGeometry(roofShape, extrudeSettings)\r\n  const roofMaterial = new THREE.MeshPhongMaterial({\r\n    color: 0x24292e,\r\n    specular: \"orange\",\r\n    flatShading: true,\r\n  })\r\n  roofMaterial.side = THREE.DoubleSide\r\n  const roofMesh = new THREE.Mesh(roofGeometry, roofMaterial)\r\n\r\n  // roofGeometry.faces.splice(20, 4) // 지붕의 밑면 제거\r\n\r\n  // 창문 구멍 뚫기\r\n\r\n  addRoofWindowHole(roofMesh)\r\n\r\n  // 지붕에 달린 창문 (앞면 3개)\r\n\r\n  addWindow(\r\n    { x: -750, y: 975, z: 500 },\r\n    { x: 400, y: 315, z: 300 },\r\n    { x: -Math.PI / 4, y: -Math.PI, z: 0 }\r\n  ) // Arguments: {position, scale, rotation}\r\n  addWindow(\r\n    { x: 0, y: 975, z: 500 },\r\n    { x: 400, y: 315, z: 300 },\r\n    { x: -Math.PI / 4, y: -Math.PI, z: 0 }\r\n  )\r\n  addWindow(\r\n    { x: 750, y: 975, z: 500 },\r\n    { x: 400, y: 315, z: 300 },\r\n    { x: -Math.PI / 4, y: -Math.PI, z: 0 }\r\n  )\r\n\r\n  // 지붕에 달린 창문 (뒷면 1개)\r\n\r\n  // addWindow(\r\n  //   { x: 0, y: 1050, z: -400 },\r\n  //   { x: 500, y: 350, z: 300 },\r\n  //   { x: Math.PI / 4, y: -Math.PI, z: 0 }\r\n  // )\r\n\r\n  // 책 모형에 붙일 텍스트 geometry\r\n  FontLoder(\r\n    {\r\n      fontModelUrl: \"/fonts/helvetiker_regular.typeface.json\",\r\n      text: \"J-Flix\",\r\n      size: 80,\r\n      height: 50,\r\n      color: 0x02f6d5,\r\n      bevelSize: 7,\r\n    },\r\n    { x: 100, y: 200, z: -900 }\r\n  )\r\n  // 프로젝트 제목\r\n\r\n  // 제작자 이름\r\n  FontLoder(\r\n    {\r\n      fontModelUrl: \"/fonts/helvetiker_regular.typeface.json\",\r\n      text: \"Made By.Jiwon\",\r\n      size: 35,\r\n      height: 50,\r\n      color: 0xffffff,\r\n      bevelSize: 3,\r\n    },\r\n    { x: 100, y: 100, z: -900 }\r\n  )\r\n\r\n  FontLoder(\r\n    {\r\n      fontModelUrl: \"/fonts/D2D.json\",\r\n      text:\r\n        \"HTML,CSS,순수_JavaScript로_만든\\n\\n미니_프로젝트들과_\\n\\n_리액트를_사용하여_만든_\\n\\nnomflix_클론입니다\",\r\n      size: 20,\r\n      height: 10,\r\n      color: 0xffffff,\r\n      bevelSize: 1,\r\n    },\r\n    { x: -200, y: 0, z: -900 }\r\n  )\r\n\r\n  // 기술스택 박스 만들기\r\n\r\n  addLogoBox({ x: -500, y: 200, z: -940 }, reactLogo)\r\n  addLogoBox({ x: -500, y: -200, z: -940 }, styledComponentsLogo)\r\n  addLogoBox({ x: 700, y: 100, z: -940 }, netlifyLogo)\r\n  addLogoBox({ x: 700, y: -300, z: -940 }, jsLogo)\r\n\r\n  const loader = new GLTFLoader()\r\n\r\n  // TV GLTF 모델 로드\r\n  loader.load(\"/models/2018_flat_screen_tv/scene.gltf\", (gltf) => {\r\n    gltf.scene.scale.set(750, 750, 2000)\r\n    gltf.scene.position.set(-1200, 0, 0)\r\n    gltf.scene.traverse(function (child) {\r\n      if ((<THREE.Mesh>child).isMesh) {\r\n        child.castShadow = true\r\n        child.receiveShadow = true\r\n      }\r\n    })\r\n    gltf.scene.rotateY(Math.PI / 2)\r\n    scene.add(gltf.scene)\r\n  })\r\n\r\n  // 소파 모델 로드\r\n\r\n  loader.load(\"/models/sofa-edit/scene.gltf\", (gltf) => {\r\n    gltf.scene.scale.set(220, 220, 220)\r\n    gltf.scene.position.set(0, -500, 100)\r\n    gltf.scene.rotateY(Math.PI)\r\n    gltf.scene.traverse(function (child) {\r\n      if ((<THREE.Mesh>child).isMesh) {\r\n        child.castShadow = true\r\n        child.receiveShadow = true\r\n      }\r\n    })\r\n    scene.add(gltf.scene)\r\n  })\r\n\r\n  // 팝콘 모델 로드\r\n\r\n  loader.load(\"/models/popcorn_bucket/scene.gltf\", (gltf) => {\r\n    gltf.scene.scale.set(100, 100, 100)\r\n    gltf.scene.position.set(-1000, -500, 850)\r\n\r\n    gltf.scene.rotateY(Math.PI)\r\n    scene.add(gltf.scene)\r\n  })\r\n\r\n  // 방문 모델 로드\r\n\r\n  loader.load(\"/models/door/scene.gltf\", (gltf) => {\r\n    gltf.scene.scale.set(600, 300, 300)\r\n    gltf.scene.position.set(1200, -500, -1030)\r\n    gltf.scene.rotateY(Math.PI / 2)\r\n\r\n    scene.add(gltf.scene)\r\n  })\r\n\r\n  // 액자 모델 추가, 노마드 로고 그림 배치\r\n  addFrame({\r\n    imageUrl: nomadLogo,\r\n    position: { x: 1480, y: 0, z: 0 },\r\n    rotateY: -Math.PI,\r\n  })\r\n\r\n  // 천장과 벽지 이음새 생성\r\n  addCeilConnector({ x: 2, y: 3, z: 9.9 }, 200, { x: 1480, y: 490, z: -1000 }, \"black\", {\r\n    x: 0,\r\n    y: 0,\r\n    z: Math.PI / 2,\r\n  })\r\n\r\n  addCeilConnector({ x: 2, y: 3, z: 9.9 }, 200, { x: -1460, y: 490, z: -1000 }, \"black\", {\r\n    x: 0,\r\n    y: 0,\r\n    z: Math.PI,\r\n  })\r\n\r\n  addCeilConnector({ x: 2, y: 3, z: 9.9 }, 300, { x: -1460, y: 480, z: -970 }, \"black\", {\r\n    x: 0,\r\n    y: Math.PI / 2,\r\n    z: Math.PI / 2,\r\n  })\r\n  addCeilConnector({ x: 2, y: 3, z: 9.9 }, 300, { x: -1460, y: 485, z: 970 }, \"black\", {\r\n    x: 0,\r\n    y: Math.PI / 2,\r\n    z: -Math.PI / 2,\r\n  })\r\n\r\n  // 바닥 이음새\r\n  addCeilConnector({ x: 2, y: 3, z: 9.9 }, 200, { x: 1480, y: -490, z: -1000 }, \"grey\", {\r\n    x: 0,\r\n    y: 0,\r\n    z: Math.PI / 2,\r\n  })\r\n\r\n  addCeilConnector({ x: 2, y: 3, z: 9.9 }, 200, { x: -1460, y: -490, z: -1000 }, \"grey\", {\r\n    x: 0,\r\n    y: 0,\r\n    z: Math.PI,\r\n  })\r\n\r\n  addCeilConnector({ x: 2, y: 3, z: 9.9 }, 300, { x: -1460, y: -480, z: -970 }, \"grey\", {\r\n    x: 0,\r\n    y: Math.PI / 2,\r\n    z: Math.PI / 2,\r\n  })\r\n\r\n  addCeilConnector({ x: 2, y: 3, z: 9.9 }, 300, { x: -1460, y: -485, z: 970 }, \"grey\", {\r\n    x: 0,\r\n    y: Math.PI / 2,\r\n    z: -Math.PI / 2,\r\n  })\r\n\r\n  // 선택 버튼 생성\r\n\r\n  // J-Flix 방 포커싱\r\n  addSelectBtn({\r\n    text: \"0\",\r\n    btnPosition: { x: 0, y: 300, z: -800 },\r\n    cameraPosition: { x: -2773.8192101111504, y: 490.0248603839669, z: 4120.7527992239675 },\r\n    targetPosition: { x: 0, y: 0, z: 0 },\r\n    zoomIndex: 0.3,\r\n  })\r\n\r\n  addIframeObj({\r\n    width: 1400,\r\n    height: 800,\r\n    siteUrl: \"https://nomfilx-jiwon.netlify.app/#/\",\r\n    position: { x: -1200, y: 10, z: 0 },\r\n    rotation: { x: 0, y: Math.PI / 2, z: 0 },\r\n  })\r\n\r\n  // JFlix 프로젝트 설명 DOM 오브젝트\r\n  addDescriptionBoard({\r\n    width: \"600px\",\r\n    height: \"400px\",\r\n    description:\r\n      \"영화 소개 사이트 입니다. 리액트 내에서 ajax를 사용해 만들었으며, json 데이터의 동적 처리, SPA, 컴포넌트 활용 등 순수 JavaScript와 비교해서 어떤 점이 리액트가 우수한 지 알 수 있었던 프로젝트였습니다.\",\r\n    title: \"J-Flix\",\r\n    titleColor: \"#10EEC6\",\r\n    siteUrl: \"https://nomfilx-jiwon.netlify.app/#/\",\r\n    position: { x: -1200, y: 610, z: -400 },\r\n    rotation: { x: 0, y: Math.PI / 2, z: 0 },\r\n  })\r\n\r\n  // tv 포커싱\r\n  addSelectBtn({\r\n    text: \"1\",\r\n    btnPosition: { x: -1300, y: 600, z: 500 },\r\n    cameraPosition: { x: 1000, y: 300, z: 0 },\r\n    targetPosition: { x: 600, y: 250, z: 0 },\r\n    zoomIndex: 0.2,\r\n  })\r\n\r\n  // 채널 변경 버튼 & tv 포커싱\r\n  addSelectBtn({\r\n    text: \"✨\",\r\n    btnPosition: { x: -1300, y: 600, z: 300 },\r\n    cameraPosition: { x: 1000, y: 300, z: 0 },\r\n    targetPosition: { x: 900, y: 300, z: 0 },\r\n    zoomIndex: 0.2,\r\n  })\r\n\r\n  addFloor({ width: 3000, height: 2000, x: 0, y: -490, z: 0, imageSrc: floorImage3 }) // J-Flix 바닥\r\n\r\n  // 창문 빛으로 밝히기\r\n  const windowLight = new THREE.RectAreaLight(0xffffff)\r\n  windowLight.position.set(-1000, 1300, 700)\r\n  windowLight.intensity = 200\r\n  windowLight.width = 500\r\n  windowLight.height = 500\r\n  windowLight.lookAt(-750, 975, 500)\r\n  scene.add(windowLight)\r\n\r\n  // 벽에 붙일 책 모형\r\n  loader.load(\"/models/book/scene.gltf\", (gltf) => {\r\n    gltf.scene.scale.set(1000, 1000, 1000)\r\n    gltf.scene.rotateX(Math.PI / 2)\r\n    gltf.scene.position.set(-300, 0, -900)\r\n    scene.add(gltf.scene)\r\n  })\r\n  const bookCoverMesh = new THREE.Mesh(\r\n    new THREE.PlaneBufferGeometry(720, 1000, 40),\r\n    new THREE.MeshPhongMaterial({ color: 0x292a2e, specular: \"orange\", flatShading: true })\r\n  )\r\n  bookCoverMesh.position.set(100, 0, -890)\r\n  bookCoverMesh.material.side = THREE.DoubleSide\r\n  scene.add(bookCoverMesh)\r\n}\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\ThreeScreens\\MainHallObjs.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\ThreeScreens\\OutsideObjs.ts",["231"],"import addLamp from \"../../Components/ThreeModules/lamp\"\r\n\r\nconst outsideObjs = () => {\r\n  // addLamp({\r\n  //   position: { x: 0, y: 400, z: 1500 },\r\n  //   rotation: { x: 0, y: 0, z: 0 },\r\n  //   scale: { x: 500, y: 500, z: 500 },\r\n  // })\r\n}\r\n\r\nexport default outsideObjs\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\ThreeScreens\\ONObjs.ts",["232","233","234","235"],"import { addLogoBox } from \"../../Components/ThreeModules/LogoBox\"\r\nimport { addSelectBtn } from \"../../Components/ThreeModules/SelectBtn\"\r\nimport opencvLogo from \"../../resources/images/opencvLogo.png\"\r\nimport socketioLogo from \"../../resources/images/socketioLogo.png\"\r\nimport webrtcLogo from \"../../resources/images/webrtcLogo.png\"\r\nimport pythonLogo from \"../../resources/images/pythonLogo.jpg\"\r\nimport flaskLogo from \"../../resources/images/flaskLogo.png\"\r\nimport mysqlLogo from \"../../resources/images/mysqlLogo.png\"\r\nimport addDescriptionBoard from \"../../Components/ThreeModules/DescriptionBoard\"\r\nimport { GLTFModelLoader } from \"../../Components/ThreeModules/GLTFModelLoader\"\r\nimport addIframeObj from \"../../Components/ThreeModules/iframeObj\"\r\nimport { FontLoder } from \"../../Components/ThreeModules/FontLoader\"\r\nimport { scene } from \"./ThreeScene\"\r\nimport { addFloor } from \"../../Components/ThreeModules/floor\"\r\nimport floorImage3 from \"../../resources/images/floor3.jpg\"\r\nimport { addFrame } from \"../../Components/ThreeModules/Frame\"\r\nimport chatImg from \"../../resources/images/chat.jpg\"\r\nimport * as THREE from \"three\"\r\n\r\nconst onObjects = () => {\r\n  // 기술스택 박스 로드\r\n  addLogoBox({ x: 2700, y: 500, z: -3900 }, opencvLogo)\r\n  addLogoBox({ x: 3000, y: 500, z: -3900 }, socketioLogo)\r\n  addLogoBox({ x: 3300, y: 500, z: -3900 }, webrtcLogo)\r\n  addLogoBox({ x: 2700, y: 200, z: -3900 }, pythonLogo)\r\n  addLogoBox({ x: 3000, y: 200, z: -3900 }, flaskLogo)\r\n  addLogoBox({ x: 3300, y: 200, z: -3900 }, mysqlLogo)\r\n\r\n  // 스마트폰 모델 로드\r\n  GLTFModelLoader({\r\n    modelUrl: \"/models/smartphone/scene.gltf\",\r\n    scale: { x: 950, y: 800, z: 600 },\r\n    position: { x: 4100, y: 400, z: -2400 },\r\n    rotation: { x: Math.PI / 2, y: -Math.PI / 2.5, z: 0 },\r\n  })\r\n\r\n  // 메세지 아이콘 모델 로드\r\n  GLTFModelLoader({\r\n    modelUrl: \"/models/digital_message_icon/scene.gltf\",\r\n    scale: { x: 200, y: 200, z: 200 },\r\n    position: { x: 3000, y: 500, z: -1100 },\r\n    rotation: { x: 0, y: 0, z: 0 },\r\n  })\r\n\r\n  // 프로젝트 제목 폰트모델\r\n  FontLoder(\r\n    {\r\n      fontModelUrl: \"/fonts/helvetiker_regular.typeface.json\",\r\n      text: \"ON\",\r\n      size: 80,\r\n      height: 50,\r\n      color: 0x07e5fd,\r\n      bevelSize: 7,\r\n    },\r\n    { x: 3300, y: 1000, z: -1100 },\r\n    { x: 0, y: Math.PI, z: 0 }\r\n  )\r\n\r\n  // 수납장 모델 로드\r\n  GLTFModelLoader({\r\n    modelUrl: \"/models/foyer_table/scene.gltf\",\r\n    scale: { x: 5, y: 5, z: 5 },\r\n    position: { x: 3000, y: -500, z: -1100 },\r\n    rotation: { x: 0, y: Math.PI, z: 0 },\r\n  })\r\n\r\n  // 테이블 모델 로드\r\n  GLTFModelLoader({\r\n    modelUrl: \"/models/square_dining_table/scene.gltf\",\r\n    scale: { x: 8, y: 8, z: 8 },\r\n    position: { x: 3000, y: -400, z: -2500 },\r\n    rotation: { x: 0, y: -Math.PI / 2, z: 0 },\r\n  })\r\n\r\n  // 방문 모델 로드\r\n  GLTFModelLoader({\r\n    modelUrl: \"/models/door/scene.gltf\",\r\n    scale: { x: 600, y: 300, z: 300 },\r\n    position: { x: 1520, y: -500, z: -3000 },\r\n    rotation: { x: 0, y: 0, z: 0 },\r\n  })\r\n\r\n  addSelectBtn({\r\n    text: \"5\",\r\n    btnPosition: { x: 1520, y: 0, z: -3000 },\r\n    targetPosition: { x: 3000, y: 500, z: -2500 },\r\n    zoomIndex: 0.2,\r\n    cameraPosition: { x: 2000, y: 500, z: -2500 },\r\n  })\r\n\r\n  addFloor({ width: 3000, height: 2900, x: -3000, y: -490, z: -2500, imageSrc: floorImage3 }) // Our-Now 바닥\r\n\r\n  addFrame({\r\n    position: { x: 1520, y: 400, z: -1800 },\r\n    imageUrl: chatImg,\r\n    rotateY: 0,\r\n  })\r\n}\r\nexport default onObjects\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\ThreeScreens\\JustReadItObjs.ts",["236"],"import { scene } from \"./ThreeScene\"\r\nimport * as THREE from \"three\"\r\nimport { DoubleSide } from \"three\"\r\nimport { GLTFModelLoader } from \"../../Components/ThreeModules/GLTFModelLoader\"\r\nimport { FontLoder } from \"../../Components/ThreeModules/FontLoader\"\r\nimport addDescriptionBoard from \"../../Components/ThreeModules/DescriptionBoard\"\r\nimport { addSelectBtn } from \"../../Components/ThreeModules/SelectBtn\"\r\nimport { addLogoBox } from \"../../Components/ThreeModules/LogoBox\"\r\nimport nodeLogo from \"../../resources/images/nodeLogo.jpg\"\r\nimport mongoLogo from \"../../resources/images/mongoLogo.jpg\"\r\nimport jsLogo from \"../../resources/images/vanillajs.png\"\r\nimport herokuLogo from \"../../resources/images/herokuLogo.png\"\r\nimport { addFloor } from \"../../Components/ThreeModules/floor\"\r\nimport floorImage3 from \"../../resources/images/floor3.jpg\"\r\nimport { addFrame } from \"../../Components/ThreeModules/Frame\"\r\nimport hackathonLogo from \"../../resources/images/nomad_hackathon.png\"\r\n\r\nexport const JustReadItObjs = () => {\r\n  const IntroVideo = document.createElement(\"video\")\r\n  IntroVideo.src = \"/videos/just-read-it.mp4\"\r\n  IntroVideo.autoplay = true\r\n  IntroVideo.loop = true\r\n\r\n  const videoTexture = new THREE.VideoTexture(IntroVideo)\r\n  videoTexture.minFilter = THREE.LinearFilter\r\n  videoTexture.magFilter = THREE.LinearFilter\r\n  videoTexture.format = THREE.RGBFormat\r\n  const rectangleGeo = new THREE.PlaneBufferGeometry(1600, 900)\r\n  const rectangleMat = new THREE.MeshBasicMaterial({ map: videoTexture, toneMapped: false })\r\n  rectangleMat.side = DoubleSide\r\n  videoTexture.needsUpdate = true\r\n  rectangleMat.needsUpdate = true\r\n\r\n  const videoMesh = new THREE.Mesh(rectangleGeo, rectangleMat)\r\n  videoMesh.rotateY(Math.PI / 2)\r\n  videoMesh.position.set(-4300, 500, -2500)\r\n  scene.add(videoMesh)\r\n\r\n  // 스켈레톤 책장 모델\r\n  GLTFModelLoader({\r\n    modelUrl: \"/models/bookshelf_household_props_12 (1)/scene.gltf\",\r\n    scale: { x: 1, y: 1, z: 1 },\r\n    position: { x: -2000, y: -500, z: -4000 },\r\n    rotation: { x: 0, y: 0, z: 0 },\r\n  })\r\n\r\n  // 일반 책장 모델\r\n  GLTFModelLoader({\r\n    modelUrl: \"/models/the_witchs_bookshelf/scene.gltf\",\r\n    scale: { x: 100, y: 100, z: 100 },\r\n    position: { x: -3500, y: -500, z: -3900 },\r\n    rotation: { x: 0, y: -Math.PI / 2, z: 0 },\r\n  })\r\n\r\n  // 책상 모델\r\n  GLTFModelLoader({\r\n    modelUrl: \"/models/table_with_things/scene.gltf\",\r\n    scale: { x: 80, y: 80, z: 80 },\r\n    position: { x: -3000, y: -500, z: -2500 },\r\n    rotation: { x: 0, y: -Math.PI / 2, z: 0 },\r\n  })\r\n\r\n  // 의자 모델\r\n  GLTFModelLoader({\r\n    modelUrl: \"/models/office_chair/scene.gltf\",\r\n    scale: { x: 6, y: 6, z: 6 },\r\n    position: { x: -2300, y: -400, z: -2000 },\r\n    rotation: { x: 0, y: Math.PI / 2, z: 0 },\r\n  })\r\n\r\n  // 프로젝트 제목 폰트모델\r\n  FontLoder(\r\n    {\r\n      fontModelUrl: \"/fonts/helvetiker_regular.typeface.json\",\r\n      text: \"Just-Read-It\",\r\n      size: 80,\r\n      height: 50,\r\n      color: 0xff991f,\r\n      bevelSize: 7,\r\n    },\r\n    { x: -3500, y: 700, z: -4000 }\r\n  )\r\n\r\n  addLogoBox({ x: -2700, y: 500, z: -1100 }, nodeLogo)\r\n  addLogoBox({ x: -3000, y: 500, z: -1100 }, mongoLogo)\r\n  addLogoBox({ x: -3000, y: 200, z: -1100 }, jsLogo)\r\n  addLogoBox({ x: -2700, y: 200, z: -1100 }, herokuLogo)\r\n\r\n  // 프로젝트 선택 버튼\r\n  addSelectBtn({\r\n    text: \"4\",\r\n    btnPosition: { x: -1500, y: 0, z: -2500 },\r\n    cameraPosition: { x: -2000, y: 500, z: -2500 },\r\n    targetPosition: { x: -3000, y: 500, z: -2500 },\r\n    zoomIndex: 0.2,\r\n  })\r\n\r\n  // 방문 모델 로드\r\n  GLTFModelLoader({\r\n    modelUrl: \"/models/door/scene.gltf\",\r\n    scale: { x: 600, y: 300, z: 300 },\r\n    position: { x: -1490, y: -500, z: -2500 },\r\n    rotation: { x: 0, y: 0, z: 0 },\r\n  })\r\n\r\n  // 방문 조명\r\n  const doorLight = new THREE.PointLight(0xffffff, 2, 300)\r\n  doorLight.position.set(-1470, 200, -2500)\r\n  scene.add(doorLight)\r\n\r\n  addFloor({ width: 3000, height: 2900, x: 3000, y: -490, z: -2500, imageSrc: floorImage3 }) // Just-Read-It 바닥\r\n\r\n  addFrame({\r\n    imageUrl: hackathonLogo,\r\n    position: { x: -1510, y: 800, z: -2500 },\r\n    rotateY: -Math.PI,\r\n  })\r\n}\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\DirectionalLight.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\SpotLight.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\SunLight.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\FontLoader.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\LogoBox.ts",["237"],"import * as THREE from \"three\"\r\nimport { FlatShading } from \"three\"\r\nimport { scene } from \"../../Screen/ThreeScreens/ThreeScene\"\r\n\r\nexport const addLogoBox = (position: { x: number; y: number; z: number }, image: string) => {\r\n  const logoBoxGeo = new THREE.BoxBufferGeometry(300, 300, 100, 1, 1, 1)\r\n  const logoBoxTexture = new THREE.TextureLoader().load(image)\r\n  const logoBoxMat = new THREE.MeshPhongMaterial({\r\n    map: logoBoxTexture,\r\n    specular: \"orange\",\r\n    flatShading: true,\r\n  })\r\n  const logoBox = new THREE.Mesh(logoBoxGeo, logoBoxMat)\r\n  logoBox.receiveShadow = true\r\n  logoBox.castShadow = true\r\n\r\n  logoBox.position.set(position.x, position.y, position.z)\r\n  scene.add(logoBox)\r\n}\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\Frame.ts",["238","239","240","241"],"import * as THREE from \"three\"\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\r\nimport { camera, scene } from \"../../Screen/ThreeScreens/ThreeScene\"\r\nimport nomadLogo from \"../../resources/images/nomadLogo.png\"\r\nimport { PointLightHelper } from \"three\"\r\n\r\n// 액자 모델\r\nconst loader = new GLTFLoader()\r\n\r\nexport const addFrame = (props: {\r\n  imageUrl: string\r\n  position: { x: number; y: number; z: number }\r\n  rotateY: number\r\n}) => {\r\n  loader.load(\"/models/3d_architecture__photo_frame/scene.gltf\", (gltf) => {\r\n    const frameGroupMesh = gltf.scene\r\n    frameGroupMesh.scale.set(10, 10, 10)\r\n    frameGroupMesh.position.set(props.position.x, props.position.y, props.position.z)\r\n    frameGroupMesh.rotateY(props.rotateY)\r\n\r\n    scene.add(frameGroupMesh)\r\n\r\n    // 카메라 시점이 액자 뒤로 갔을 때 사라지게 하는 알고리즘\r\n    // window.addEventListener(\"mouseup\", () => {\r\n    //   console.log(camera.position)\r\n    //   console.log(camera.rotation)\r\n    //   const meshsOfFrame =\r\n    //     frameGroupMesh.children[0].children[0].children[0].children[0].children[0].children[0]\r\n    //       .children\r\n\r\n    //   meshsOfFrame.map((object) => {\r\n    //     if (camera.rotation.z > 0.2) {\r\n    //       object.visible = false\r\n    //     } else {\r\n    //       object.visible = true\r\n    //     }\r\n    //   })\r\n    // })\r\n\r\n    // 액자에 들어갈 그림\r\n\r\n    const sizeCheckBox = new THREE.Box3().setFromObject(gltf.scene) // 액자 크기 측정을 위한 가상 박스\r\n\r\n    const frameWidth = sizeCheckBox.max.z - sizeCheckBox.min.z - 100\r\n    const frameHeight = sizeCheckBox.max.y - sizeCheckBox.min.y - 100\r\n    const frameDepth = sizeCheckBox.max.x - sizeCheckBox.min.x\r\n\r\n    const imageInFrameGeo = new THREE.PlaneBufferGeometry(frameWidth, frameHeight, frameDepth)\r\n    const imageInFrameTexture = new THREE.TextureLoader().load(props.imageUrl)\r\n    const imageInFrameMat = new THREE.MeshPhongMaterial({ map: imageInFrameTexture })\r\n    const imageInFrame = new THREE.Mesh(imageInFrameGeo, imageInFrameMat)\r\n\r\n    const pointLight = new THREE.PointLight(0xffffff, 5, 500)\r\n    // 액자의 회전에 따른 이미지 위치 조정\r\n    if (props.rotateY === Math.PI || props.rotateY === -Math.PI) {\r\n      imageInFrame.position.set(props.position.x - 20, props.position.y, props.position.z)\r\n      // 액자 회전에 따른 이미지 회전\r\n      imageInFrame.rotateY(props.rotateY / 2)\r\n      pointLight.position.set(props.position.x - 60, props.position.y, props.position.z)\r\n    } else if (props.rotateY === 0) {\r\n      imageInFrame.position.set(props.position.x + 20, props.position.y, props.position.z)\r\n      imageInFrame.rotateY(Math.PI / 2)\r\n      pointLight.position.set(props.position.x + 60, props.position.y, props.position.z)\r\n    }\r\n\r\n    const lightHelper = new THREE.PointLightHelper(pointLight, 0xffff00)\r\n    scene.add(imageInFrame)\r\n    scene.add(pointLight)\r\n    // scene.add(lightHelper)\r\n  })\r\n}\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\DescriptionBoard.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\floor.ts",["242","243"],"import * as THREE from \"three\"\r\nimport { scene } from \"../../Screen/ThreeScreens/ThreeScene\"\r\nimport floorImage2 from \"../../resources/images/floor2.jpg\"\r\nimport floorImage3 from \"../../resources/images/floor3.jpg\"\r\n\r\ninterface typeAddFloor {\r\n  width: number\r\n  height: number\r\n  position?: object\r\n  x: number\r\n  y: number\r\n  z: number\r\n  imageSrc: string\r\n}\r\n\r\nexport const addFloor = ({ width, height, x, y, z, imageSrc }: typeAddFloor) => {\r\n  const floorGeo = new THREE.PlaneBufferGeometry(width, height)\r\n  const floorTexture = new THREE.TextureLoader().load(imageSrc)\r\n  floorTexture.wrapS = floorTexture.wrapT = THREE.RepeatWrapping\r\n  floorTexture.repeat.set(7, 7)\r\n  floorTexture.encoding = THREE.sRGBEncoding\r\n\r\n  const floorMaterial = new THREE.MeshPhongMaterial({\r\n    map: floorTexture,\r\n    specular: \"orange\",\r\n    flatShading: true,\r\n  })\r\n\r\n  // 바닥 반사 효과\r\n  const cubeRenderTarget = new THREE.WebGLCubeRenderTarget(640, {\r\n    format: THREE.RGBFormat,\r\n    generateMipmaps: true,\r\n    minFilter: THREE.LinearMipmapLinearFilter,\r\n  })\r\n\r\n  const floorCamera = new THREE.CubeCamera(500, 1500, cubeRenderTarget)\r\n  floorCamera.position.set(0, 0, 0)\r\n  scene.add(floorCamera)\r\n\r\n  const floorMesh = new THREE.Mesh(floorGeo, floorMaterial)\r\n  floorMesh.position.set(0, 100, 0)\r\n  floorMesh.receiveShadow = true\r\n  floorMesh.rotateX(-Math.PI / 2) // -90도 로테이션\r\n  floorMesh.position.set(x, y, z) // 위치 조정\r\n  scene.add(floorMesh)\r\n}\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\CeilConnetor.ts",["244"],"import { scene } from \"../../Screen/ThreeScreens/ThreeScene\"\r\nimport * as THREE from \"three\"\r\nimport { BackSide, FrontSide } from \"three\"\r\n\r\n// 천장과 벽지 이음새\r\nexport const addCeilConnector = (\r\n  scale: { x: number; y: number; z: number },\r\n  depth: number,\r\n  position: { x: number; y: number; z: number },\r\n  color: string,\r\n  rotation: { x: number; y: number; z: number }\r\n) => {\r\n  const shape = new THREE.Shape()\r\n  shape.moveTo(0, 0)\r\n  shape.lineTo(10, 0)\r\n  shape.lineTo(10, 10)\r\n\r\n  const setting = {\r\n    steps: 2,\r\n    depth,\r\n    bevelEnabled: true,\r\n    bevelThickness: 1,\r\n    bevelSize: 10,\r\n    bevelOffset: 0,\r\n    bevelSegments: 1,\r\n    curveSegments: 1,\r\n  }\r\n\r\n  const geometry = new THREE.ExtrudeGeometry(shape, setting)\r\n  const material = new THREE.MeshBasicMaterial({ color })\r\n  const mesh = new THREE.Mesh(geometry, material)\r\n  mesh.scale.set(scale.x, scale.y, scale.z)\r\n  mesh.rotation.set(rotation.x, rotation.y, rotation.z)\r\n  mesh.position.set(position.x, position.y, position.z)\r\n  material.side = FrontSide\r\n  scene.add(mesh)\r\n}\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\RoofWIndowHole.ts",["245"],"import * as THREE from \"three\"\r\nimport { CSG } from \"three-csg-ts\"\r\nimport { scene } from \"../../Screen/ThreeScreens/ThreeScene\"\r\n\r\nexport const addRoofWindowHole = (\r\n  roofMesh: THREE.Mesh<THREE.ExtrudeGeometry, THREE.MeshPhongMaterial>\r\n) => {\r\n  const roofWindowHole = new THREE.Mesh(\r\n    new THREE.BoxBufferGeometry(600, 500, 600, 1, 1, 1),\r\n    new THREE.MeshPhongMaterial()\r\n  )\r\n  const roofWindowHole2 = new THREE.Mesh(\r\n    new THREE.BoxBufferGeometry(600, 500, 600, 1, 1, 1),\r\n    new THREE.MeshPhongMaterial()\r\n  )\r\n  const roofWindowHole3 = new THREE.Mesh(\r\n    new THREE.BoxBufferGeometry(600, 500, 600, 1, 1, 1),\r\n    new THREE.MeshPhongMaterial()\r\n  )\r\n  const roofWindowHole4 = new THREE.Mesh(\r\n    new THREE.BoxBufferGeometry(600, 500, 700, 1, 1, 1),\r\n    new THREE.MeshPhongMaterial()\r\n  )\r\n  const JFlixDoorHole = new THREE.Mesh(\r\n    new THREE.BoxBufferGeometry(600, 500, 700, 1, 1, 1),\r\n    new THREE.MeshPhongMaterial()\r\n  )\r\n\r\n  roofWindowHole.rotateZ(-Math.PI / 4)\r\n  roofWindowHole2.rotateZ(-Math.PI / 4)\r\n  roofWindowHole3.rotateZ(-Math.PI / 4)\r\n  roofWindowHole4.rotateZ(Math.PI / 4)\r\n\r\n  roofWindowHole.position.set(500, 1500, 750)\r\n  roofWindowHole2.position.set(500, 1500, 1500)\r\n  roofWindowHole3.position.set(500, 1500, 2250)\r\n  roofWindowHole4.position.set(500, 700, 1500)\r\n\r\n  roofMesh.updateMatrix()\r\n  roofWindowHole.updateMatrix()\r\n  roofWindowHole2.updateMatrix()\r\n  roofWindowHole3.updateMatrix()\r\n  roofWindowHole4.updateMatrix()\r\n\r\n  // 첫번째 창문 구멍 생성\r\n  const bspWindowHole = CSG.fromMesh(roofWindowHole)\r\n  const bspRoof = CSG.fromMesh(roofMesh)\r\n\r\n  const bspResult = bspRoof.subtract(bspWindowHole)\r\n\r\n  const bspMeshResult = CSG.toMesh(bspResult, roofMesh.matrix)\r\n\r\n  bspMeshResult.material = roofMesh.material\r\n  // netlify에서 geometry.faces 프로퍼티를 인식하지 못하여 조치\r\n  // face 목록 중 가장 끝의 것들만 제거하면 패인 부분을 제거할 수 있음\r\n  ;(bspMeshResult as any).geometry.faces.splice(97, 40)\r\n\r\n  // 두번째 창문 구멍 생성\r\n\r\n  const bspWindowHole2 = CSG.fromMesh(roofWindowHole2)\r\n  const bspRoof2 = CSG.fromMesh(bspMeshResult)\r\n\r\n  const bspResult2 = bspRoof2.subtract(bspWindowHole2)\r\n  const bspMeshResult2 = CSG.toMesh(bspResult2, bspMeshResult.matrix)\r\n  bspMeshResult2.material = roofMesh.material\r\n  // netlify에서 geometry.faces 프로퍼티를 인식하지 못하여 조치\r\n  ;(bspMeshResult2 as any).geometry.faces.splice(97, 16)\r\n\r\n  // 세번쨰 창문 구멍 생성\r\n\r\n  const bspWindowHole3 = CSG.fromMesh(roofWindowHole3)\r\n  const bspRoof3 = CSG.fromMesh(bspMeshResult2)\r\n\r\n  const bspResult3 = bspRoof3.subtract(bspWindowHole3)\r\n  const bspMeshResult3 = CSG.toMesh(bspResult3, bspMeshResult.matrix)\r\n  bspMeshResult3.material = roofMesh.material\r\n  // netlify에서 geometry.faces 프로퍼티를 인식하지 못하여 조치\r\n  ;(bspMeshResult3 as any).geometry.faces.splice(97, 18)\r\n\r\n  bspMeshResult3.rotateZ(Math.PI / 2)\r\n  bspMeshResult3.rotateX(Math.PI / 2)\r\n  bspMeshResult3.position.set(-1500, 510, -1000)\r\n  bspMeshResult3.material.side = THREE.DoubleSide\r\n\r\n  scene.add(bspMeshResult3)\r\n\r\n  // 네번째 창문 구멍 생성\r\n  // const bspWindowHole4 = CSG.fromMesh(roofWindowHole4)\r\n  // const bspRoof4 = CSG.fromMesh(bspMeshResult3)\r\n\r\n  // const bspResult4 = bspRoof4.subtract(bspWindowHole4)\r\n  // const bspMeshResult4 = CSG.toMesh(bspResult4, bspMeshResult.matrix)\r\n  // bspMeshResult4.material = roofMesh.material\r\n\r\n  // console.log(bspMeshResult4.geometry.faces)\r\n  // bspMeshResult4.geometry.faces.splice(190, 15)\r\n\r\n  // scene.add(bspMeshResult4)\r\n}\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\SelectBtn.ts",["246","247","248","249"],"import * as THREE from \"three\"\r\nimport { FlatShading } from \"three\"\r\nimport {\r\n  camera,\r\n  scene,\r\n  selectBtnObjs,\r\n  cssScene,\r\n  controls,\r\n} from \"../../Screen/ThreeScreens/ThreeScene\"\r\nimport CSS3D from \"three-css3drenderer\"\r\nimport addDescriptionBoard, { descriptionBox } from \"./DescriptionBoard\"\r\nimport addIframeObj, { embedWebsite, websiteObject } from \"./iframeObj\"\r\n\r\nfunction chooseProject() {\r\n  // 순차적으로 프로젝트 변경\r\n  // 나중에 버튼을 여러개 만들어 각각 선택할 수 있게 할까 고민중.\r\n  // switch - case로 변경 예정\r\n  if (embedWebsite.src === \"https://nomfilx-jiwon.netlify.app/#/\") {\r\n    embedWebsite.src = \"https://gonnabea.github.io/Music-Player/\"\r\n  } else if (embedWebsite.src === \"https://gonnabea.github.io/Music-Player/\") {\r\n    embedWebsite.src = \"https://gonnabea.github.io/Typing-Game/\"\r\n  } else if (embedWebsite.src === \"https://gonnabea.github.io/Typing-Game/\") {\r\n    embedWebsite.src = \"https://gonnabea.github.io/Hangman-Game/\"\r\n  } else if (embedWebsite.src === \"https://gonnabea.github.io/Hangman-Game/\") {\r\n    embedWebsite.src = \"https://gonnabea.github.io/Expense-Tracker/\"\r\n  } else if (embedWebsite.src === \"https://gonnabea.github.io/Expense-Tracker/\") {\r\n    embedWebsite.src = \"https://gonnabea.github.io/Speech-Text-Reader/\"\r\n  } else if (embedWebsite.src === \"https://gonnabea.github.io/Speech-Text-Reader/\") {\r\n    embedWebsite.src = \"https://gonnabea.github.io/Sortable-List/\"\r\n  } else if (embedWebsite.src === \"https://gonnabea.github.io/Sortable-List/\") {\r\n    embedWebsite.src = \"https://gonnabea.github.io/Breakout-Game/\"\r\n  } else {\r\n    embedWebsite.src = \"https://nomfilx-jiwon.netlify.app/#/\"\r\n  }\r\n}\r\n\r\n// 선택 버튼 생성\r\nexport const addSelectBtn = (props: {\r\n  text: string\r\n  btnPosition: { x: number; y: number; z: number }\r\n  cameraPosition: { x: number; y: number; z: number }\r\n  targetPosition?: { x: number; y: number; z: number }\r\n  zoomIndex: number\r\n}) => {\r\n  const selectBtn = document.createElement(\"button\")\r\n  selectBtn.innerHTML = props.text\r\n  selectBtn.style.width = \"100px\"\r\n  selectBtn.style.height = \"100px\"\r\n  selectBtn.style.fontSize = \"60px\"\r\n  selectBtn.style.borderRadius = \"100%\"\r\n  selectBtn.style.background = \"rgba(0,0,0,0.5)\"\r\n  selectBtn.style.color = \"white\"\r\n\r\n  selectBtn.onmouseover = () => {\r\n    selectBtn.style.color = \"skyblue\"\r\n    selectBtn.style.border = \"7px solid skyblue\"\r\n    selectBtn.style.cursor = \"pointer\"\r\n  }\r\n  selectBtn.onmouseleave = () => {\r\n    selectBtn.style.border = \"none\"\r\n\r\n    selectBtn.style.color = \"white\"\r\n  }\r\n\r\n  const selectBtnObj = new CSS3D.CSS3DObject(selectBtn)\r\n\r\n  selectBtnObjs.push(selectBtnObj)\r\n\r\n  selectBtnObj.position.set(props.btnPosition.x, props.btnPosition.y, props.btnPosition.z)\r\n  selectBtnObj.rotation.set(camera.rotation.x, camera.rotation.y, camera.rotation.z)\r\n  cssScene.add(selectBtnObj)\r\n\r\n  selectBtn.onclick = () => {\r\n    if (props.text === \"0\") {\r\n      descriptionBox.style.display = \"none\"\r\n\r\n      controls.target.set(0, 0, 0)\r\n    }\r\n\r\n    if (props.text === \"1\") {\r\n      descriptionBox.style.display = \"none\"\r\n\r\n      embedWebsite.style.display = \"block\"\r\n      controls.target.set(websiteObject.position.x, 0, websiteObject.position.z) // 예외적으로 타겟이 정해짐\r\n\r\n      // JFlix 웹사이트 로드\r\n      addIframeObj({\r\n        width: 1400,\r\n        height: 800,\r\n        siteUrl: \"https://nomfilx-jiwon.netlify.app/#/\",\r\n        position: { x: -1200, y: 10, z: 0 },\r\n        rotation: { x: 0, y: Math.PI / 2, z: 0 },\r\n      })\r\n\r\n      // JFlix 프로젝트 설명 보드\r\n      addDescriptionBoard({\r\n        width: \"600px\",\r\n        height: \"400px\",\r\n        description:\r\n          \"영화 소개 사이트 입니다. 리액트 내에서 ajax를 사용해 만들었으며, json 데이터의 동적 처리, SPA, 컴포넌트 활용 등 순수 JavaScript와 비교해서 어떤 점이 리액트가 우수한 지 알 수 있었던 프로젝트였습니다.\",\r\n        title: \"J-Flix\",\r\n        titleColor: \"#10EEC6\",\r\n        siteUrl: \"https://nomfilx-jiwon.netlify.app/#/\",\r\n        position: { x: -1200, y: 610, z: -400 },\r\n        rotation: { x: 0, y: Math.PI / 2, z: 0 },\r\n      })\r\n      camera.updateMatrix()\r\n    } // 프로젝트 변경 버튼\r\n    else if (props.text === \"✨\") {\r\n      descriptionBox.style.display = \"none\"\r\n      embedWebsite.style.display = \"block\"\r\n      chooseProject()\r\n      controls.target.set(websiteObject.position.x, 0, websiteObject.position.z)\r\n      camera.updateMatrix()\r\n      // JFLIX 프로젝트 설명 보드\r\n      addDescriptionBoard({\r\n        width: \"600px\",\r\n        height: \"400px\",\r\n        description:\r\n          \"영화 소개 사이트 입니다. 리액트 내에서 ajax를 사용해 만들었으며, json 데이터의 동적 처리, SPA, 컴포넌트 활용 등 순수 JavaScript와 비교해서 어떤 점이 리액트가 우수한 지 알 수 있었던 프로젝트였습니다.\",\r\n        title: \"J-Flix\",\r\n        titleColor: \"#10EEC6\",\r\n        siteUrl: \"https://nomfilx-jiwon.netlify.app/#/\",\r\n        position: { x: -1200, y: 610, z: -400 },\r\n        rotation: { x: 0, y: Math.PI / 2, z: 0 },\r\n      })\r\n    } else if (props.text === \"4\") {\r\n      descriptionBox.style.display = \"none\"\r\n      embedWebsite.style.display = \"none\"\r\n      // Just-Read-It 프로젝트 설명 보드\r\n      addDescriptionBoard({\r\n        siteUrl: \"https://just-read-it.herokuapp.com/\",\r\n        width: \"500px\",\r\n        height: \"400px\",\r\n        title: \"Just Read It\",\r\n        titleColor: \"orange\",\r\n        description:\r\n          \"node.js-express 서버와 자바스크립트 연습용 프로젝트입니다. css 애니메이션과 3D 효과에 가장 공을 들였습니다. \\n 1. \",\r\n        position: { x: -4300, y: -200, z: -3300 },\r\n        rotation: { x: 0, y: Math.PI / 2, z: 0 },\r\n      })\r\n    } else if (props.text === \"5\") {\r\n      descriptionBox.style.display = \"none\"\r\n      embedWebsite.style.display = \"block\"\r\n      // ON 프로젝트 설명 보드\r\n      addDescriptionBoard({\r\n        siteUrl: \"https://our-now.herokuapp.com/\",\r\n        width: \"600px\",\r\n        height: \"400px\",\r\n        title: \"ON\",\r\n        titleColor: \"purple\",\r\n        description:\r\n          \"카카오톡과 같이 실시간 채팅과 1:1, 다대다 채팅이 가능하며, 화상통화 기능과 얼굴인식을 통환 효과 각종 영상처리 넣기를 지원하는 웹입니다.\",\r\n        position: { x: 4000, y: 1000, z: -1950 },\r\n        rotation: { x: 0, y: -Math.PI / 2, z: 0 },\r\n      })\r\n\r\n      // ON 프로젝트 웹사이트 로드\r\n      addIframeObj({\r\n        siteUrl: \"https://our-now.herokuapp.com/#/\",\r\n        position: { x: 4000, y: 400, z: -2380 },\r\n        width: 1200,\r\n        height: 800,\r\n        rotation: { x: 0, y: -Math.PI / 2, z: 0 },\r\n      })\r\n    } else {\r\n      embedWebsite.style.display = \"none\"\r\n      descriptionBox.style.display = \"none\"\r\n    }\r\n\r\n    if (props.targetPosition) {\r\n      controls.target.set(props.targetPosition.x, props.targetPosition.y, props.targetPosition.z)\r\n    }\r\n    camera.position.set(props.cameraPosition.x, props.cameraPosition.y, props.cameraPosition.z)\r\n    camera.zoom = props.zoomIndex\r\n\r\n    camera.updateProjectionMatrix()\r\n    camera.updateMatrix()\r\n    cssScene.updateMatrixWorld()\r\n\r\n    // 카메라 자동 이동 시 iframe이 비활성화되는 현상 해결책\r\n    controls.rotateUp(-0.01)\r\n    controls.update()\r\n\r\n    selectBtnObjs.map((selectBtnObj) => {\r\n      selectBtnObj.scale.set(1, 1, 1)\r\n      selectBtnObj.rotation.set(camera.rotation.x, camera.rotation.y, camera.rotation.z)\r\n      camera.updateProjectionMatrix()\r\n      camera.updateMatrix()\r\n      cssScene.updateMatrixWorld()\r\n    })\r\n  }\r\n}\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\Window.ts",["250"],"import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\r\nimport { scene } from \"../../Screen/ThreeScreens/ThreeScene\"\r\nimport * as THREE from \"three\"\r\n\r\nconst loader = new GLTFLoader()\r\n\r\nexport const addWindow = (\r\n  position: { x: number; y: number; z: number },\r\n  scale: { x: number; y: number; z: number },\r\n  rotation: { x: any; y: any; z: any }\r\n) => {\r\n  loader.load(\"/models/window1/window.gltf\", (gltf) => {\r\n    gltf.scene.position.set(position.x, position.y, position.z)\r\n    gltf.scene.rotation.set(rotation.x, rotation.y, rotation.z)\r\n    gltf.scene.scale.set(scale.x, scale.y, scale.z)\r\n    scene.add(gltf.scene)\r\n  })\r\n}\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\iframeObj.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\GLTFModelLoader.ts",["251"],"import * as THREE from \"three\"\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\r\nimport { scene } from \"../../Screen/ThreeScreens/ThreeScene\"\r\n\r\nconst loader = new GLTFLoader()\r\n\r\nexport const GLTFModelLoader = (props: {\r\n  modelUrl: string\r\n  scale: { x: number; y: number; z: number }\r\n  position: { x: number; y: number; z: number }\r\n  rotation: { x: number; y: number; z: number }\r\n}) => {\r\n  loader.load(props.modelUrl, (gltf) => {\r\n    gltf.scene.scale.set(props.scale.x, props.scale.y, props.scale.z)\r\n    gltf.scene.position.set(props.position.x, props.position.y, props.position.z)\r\n    gltf.scene.rotation.set(props.rotation.x, props.rotation.y, props.rotation.z)\r\n\r\n    scene.add(gltf.scene)\r\n  })\r\n}\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\Documents\\WikiHeader.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\Documents\\WikiSidebar.tsx",["252"],"import { Link } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\n\r\nconst SideBar = styled.aside`\r\n  padding: 20px;\r\n  background-color: #f6f6f6;\r\n  height: 100vh;\r\n  width: 10em;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  @media (max-width: 550px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst WikiLogo = styled.img`\r\n  max-width: 120px;\r\n  max-height: 120px;\r\n`\r\nconst PageTitle = styled.h1`\r\n  font-size: 18px;\r\n  margin-bottom: 0px;\r\n`\r\nconst TitleTail = styled.span`\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  margin-bottom: 20px;\r\n`\r\nconst SideBarMenu = styled(Link)`\r\n  font-size: 12px;\r\n  padding: 3px;\r\n`\r\nconst Footer = styled.footer`\r\n  width: 100%;\r\n  padding: 5px;\r\n  border: solid 1px skyblue;\r\n  flex-direction: column;\r\n  position: static;\r\n  background-color: #eeeeee;\r\n  font-size: 12px;\r\n  margin-top: 100%;\r\n`\r\n\r\ninterface props {\r\n  menus: Array<string>\r\n}\r\n\r\nconst WikiSidebar: React.FC<props> = ({ menus }) => {\r\n  return (\r\n    <SideBar>\r\n      <WikiLogo src=\"/images/wiki_logo.png\"></WikiLogo>\r\n      <PageTitle>위키백과</PageTitle>\r\n      <TitleTail>Jiwon의 CS 백과</TitleTail>\r\n\r\n      {menus.map((menu) => (\r\n        <SideBarMenu to={`/${menu}`}>{menu}</SideBarMenu>\r\n      ))}\r\n      <Footer>\r\n        위키백과의 디자인을 클론하여 만든 페이지임을 밝힙니다. -Jiwon-\r\n        <br />\r\n        <a href=\"https://en.wikipedia.org/wiki/Main_Page\" target=\"_blank\">\r\n          컨셉 페이지\r\n        </a>\r\n      </Footer>\r\n    </SideBar>\r\n  )\r\n}\r\n\r\nexport default WikiSidebar\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\Documents\\WikiGreeting.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\Documents\\WikiContentBox.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Documents\\main.tsx",["253","254"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Documents\\Main.tsx",["255","256","257","258"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Documents\\Backend.tsx",["259","260"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Documents\\Frontend.tsx",["261","262"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Documents\\3d-game.tsx",["263","264","265","266","267"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Documents\\Android.tsx",["268","269","270","271","272"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Documents\\CommonWiki.tsx",["273","274","275","276","277"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Documents\\Computer-Vision.tsx",["278","279","280","281","282"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Documents\\Network.tsx",["283","284"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\Documents\\WikiDictionary.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Documents\\styles\\common-styles.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\Books\\3D-Book.tsx",["285","286"],{"ruleId":"287","replacedBy":"288"},{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","severity":1,"message":"292","line":4,"column":8,"nodeType":"293","messageId":"294","endLine":4,"endColumn":26},{"ruleId":"295","severity":1,"message":"296","line":206,"column":17,"nodeType":"297","messageId":"298","endLine":206,"endColumn":19},{"ruleId":"295","severity":1,"message":"296","line":206,"column":31,"nodeType":"297","messageId":"298","endLine":206,"endColumn":33},{"ruleId":"291","severity":1,"message":"299","line":14,"column":8,"nodeType":"293","messageId":"294","endLine":14,"endColumn":20},{"ruleId":"291","severity":1,"message":"300","line":46,"column":5,"nodeType":"293","messageId":"294","endLine":46,"endColumn":14},{"ruleId":"291","severity":1,"message":"301","line":47,"column":5,"nodeType":"293","messageId":"294","endLine":47,"endColumn":10},{"ruleId":"291","severity":1,"message":"302","line":86,"column":11,"nodeType":"293","messageId":"294","endLine":86,"endColumn":26},{"ruleId":"291","severity":1,"message":"303","line":188,"column":11,"nodeType":"293","messageId":"294","endLine":188,"endColumn":26},{"ruleId":"304","severity":1,"message":"305","line":292,"column":44,"nodeType":"306","messageId":"307","endLine":292,"endColumn":46},{"ruleId":"304","severity":1,"message":"305","line":311,"column":44,"nodeType":"306","messageId":"307","endLine":311,"endColumn":46},{"ruleId":"304","severity":1,"message":"305","line":329,"column":42,"nodeType":"306","messageId":"307","endLine":329,"endColumn":44},{"ruleId":"304","severity":1,"message":"305","line":336,"column":44,"nodeType":"306","messageId":"307","endLine":336,"endColumn":46},{"ruleId":"308","severity":1,"message":"309","line":135,"column":12,"nodeType":"310","messageId":"311","endLine":135,"endColumn":29},{"ruleId":"308","severity":1,"message":"309","line":151,"column":12,"nodeType":"310","messageId":"311","endLine":151,"endColumn":29},{"ruleId":"291","severity":1,"message":"312","line":1,"column":8,"nodeType":"293","messageId":"294","endLine":1,"endColumn":15},{"ruleId":"291","severity":1,"message":"313","line":9,"column":8,"nodeType":"293","messageId":"294","endLine":9,"endColumn":27},{"ruleId":"291","severity":1,"message":"299","line":11,"column":8,"nodeType":"293","messageId":"294","endLine":11,"endColumn":20},{"ruleId":"291","severity":1,"message":"314","line":13,"column":10,"nodeType":"293","messageId":"294","endLine":13,"endColumn":15},{"ruleId":"291","severity":1,"message":"315","line":18,"column":13,"nodeType":"293","messageId":"294","endLine":18,"endColumn":18},{"ruleId":"291","severity":1,"message":"313","line":6,"column":8,"nodeType":"293","messageId":"294","endLine":6,"endColumn":27},{"ruleId":"291","severity":1,"message":"316","line":2,"column":10,"nodeType":"293","messageId":"294","endLine":2,"endColumn":21},{"ruleId":"291","severity":1,"message":"317","line":3,"column":10,"nodeType":"293","messageId":"294","endLine":3,"endColumn":16},{"ruleId":"291","severity":1,"message":"318","line":4,"column":8,"nodeType":"293","messageId":"294","endLine":4,"endColumn":17},{"ruleId":"291","severity":1,"message":"319","line":5,"column":10,"nodeType":"293","messageId":"294","endLine":5,"endColumn":26},{"ruleId":"291","severity":1,"message":"320","line":66,"column":11,"nodeType":"293","messageId":"294","endLine":66,"endColumn":22},{"ruleId":"291","severity":1,"message":"321","line":3,"column":8,"nodeType":"293","messageId":"294","endLine":3,"endColumn":19},{"ruleId":"291","severity":1,"message":"322","line":4,"column":8,"nodeType":"293","messageId":"294","endLine":4,"endColumn":19},{"ruleId":"291","severity":1,"message":"323","line":3,"column":10,"nodeType":"293","messageId":"294","endLine":3,"endColumn":18},{"ruleId":"291","severity":1,"message":"324","line":24,"column":9,"nodeType":"293","messageId":"294","endLine":24,"endColumn":22},{"ruleId":"291","severity":1,"message":"315","line":1,"column":13,"nodeType":"293","messageId":"294","endLine":1,"endColumn":18},{"ruleId":"291","severity":1,"message":"316","line":2,"column":10,"nodeType":"293","messageId":"294","endLine":2,"endColumn":21},{"ruleId":"291","severity":1,"message":"314","line":5,"column":3,"nodeType":"293","messageId":"294","endLine":5,"endColumn":8},{"ruleId":"304","severity":1,"message":"305","line":185,"column":38,"nodeType":"306","messageId":"307","endLine":185,"endColumn":40},{"ruleId":"291","severity":1,"message":"315","line":3,"column":13,"nodeType":"293","messageId":"294","endLine":3,"endColumn":18},{"ruleId":"291","severity":1,"message":"315","line":1,"column":13,"nodeType":"293","messageId":"294","endLine":1,"endColumn":18},{"ruleId":"325","severity":1,"message":"326","line":62,"column":59,"nodeType":"327","endLine":62,"endColumn":74},{"ruleId":"291","severity":1,"message":"328","line":1,"column":10,"nodeType":"293","messageId":"294","endLine":1,"endColumn":14},{"ruleId":"291","severity":1,"message":"329","line":14,"column":7,"nodeType":"293","messageId":"294","endLine":14,"endColumn":14},{"ruleId":"291","severity":1,"message":"328","line":1,"column":10,"nodeType":"293","messageId":"294","endLine":1,"endColumn":14},{"ruleId":"291","severity":1,"message":"330","line":2,"column":8,"nodeType":"293","messageId":"294","endLine":2,"endColumn":14},{"ruleId":"291","severity":1,"message":"331","line":12,"column":3,"nodeType":"293","messageId":"294","endLine":12,"endColumn":15},{"ruleId":"291","severity":1,"message":"332","line":13,"column":3,"nodeType":"293","messageId":"294","endLine":13,"endColumn":16},{"ruleId":"291","severity":1,"message":"328","line":2,"column":10,"nodeType":"293","messageId":"294","endLine":2,"endColumn":14},{"ruleId":"291","severity":1,"message":"330","line":3,"column":8,"nodeType":"293","messageId":"294","endLine":3,"endColumn":14},{"ruleId":"291","severity":1,"message":"328","line":2,"column":10,"nodeType":"293","messageId":"294","endLine":2,"endColumn":14},{"ruleId":"291","severity":1,"message":"330","line":3,"column":8,"nodeType":"293","messageId":"294","endLine":3,"endColumn":14},{"ruleId":"291","severity":1,"message":"328","line":1,"column":10,"nodeType":"293","messageId":"294","endLine":1,"endColumn":14},{"ruleId":"291","severity":1,"message":"330","line":2,"column":8,"nodeType":"293","messageId":"294","endLine":2,"endColumn":14},{"ruleId":"291","severity":1,"message":"333","line":3,"column":8,"nodeType":"293","messageId":"294","endLine":3,"endColumn":22},{"ruleId":"291","severity":1,"message":"331","line":11,"column":3,"nodeType":"293","messageId":"294","endLine":11,"endColumn":15},{"ruleId":"291","severity":1,"message":"334","line":23,"column":9,"nodeType":"293","messageId":"294","endLine":23,"endColumn":23},{"ruleId":"291","severity":1,"message":"328","line":1,"column":10,"nodeType":"293","messageId":"294","endLine":1,"endColumn":14},{"ruleId":"291","severity":1,"message":"330","line":2,"column":8,"nodeType":"293","messageId":"294","endLine":2,"endColumn":14},{"ruleId":"291","severity":1,"message":"333","line":3,"column":8,"nodeType":"293","messageId":"294","endLine":3,"endColumn":22},{"ruleId":"291","severity":1,"message":"331","line":11,"column":3,"nodeType":"293","messageId":"294","endLine":11,"endColumn":15},{"ruleId":"291","severity":1,"message":"334","line":23,"column":9,"nodeType":"293","messageId":"294","endLine":23,"endColumn":23},{"ruleId":"291","severity":1,"message":"328","line":1,"column":10,"nodeType":"293","messageId":"294","endLine":1,"endColumn":14},{"ruleId":"291","severity":1,"message":"330","line":2,"column":8,"nodeType":"293","messageId":"294","endLine":2,"endColumn":14},{"ruleId":"291","severity":1,"message":"333","line":3,"column":8,"nodeType":"293","messageId":"294","endLine":3,"endColumn":22},{"ruleId":"291","severity":1,"message":"331","line":11,"column":3,"nodeType":"293","messageId":"294","endLine":11,"endColumn":15},{"ruleId":"291","severity":1,"message":"334","line":23,"column":9,"nodeType":"293","messageId":"294","endLine":23,"endColumn":23},{"ruleId":"291","severity":1,"message":"328","line":1,"column":10,"nodeType":"293","messageId":"294","endLine":1,"endColumn":14},{"ruleId":"291","severity":1,"message":"330","line":2,"column":8,"nodeType":"293","messageId":"294","endLine":2,"endColumn":14},{"ruleId":"291","severity":1,"message":"333","line":3,"column":8,"nodeType":"293","messageId":"294","endLine":3,"endColumn":22},{"ruleId":"291","severity":1,"message":"331","line":12,"column":3,"nodeType":"293","messageId":"294","endLine":12,"endColumn":15},{"ruleId":"291","severity":1,"message":"334","line":24,"column":9,"nodeType":"293","messageId":"294","endLine":24,"endColumn":23},{"ruleId":"291","severity":1,"message":"328","line":2,"column":10,"nodeType":"293","messageId":"294","endLine":2,"endColumn":14},{"ruleId":"291","severity":1,"message":"330","line":3,"column":8,"nodeType":"293","messageId":"294","endLine":3,"endColumn":14},{"ruleId":"291","severity":1,"message":"335","line":1,"column":18,"nodeType":"293","messageId":"294","endLine":1,"endColumn":38},{"ruleId":"291","severity":1,"message":"336","line":129,"column":7,"nodeType":"293","messageId":"294","endLine":129,"endColumn":14},"no-native-reassign",["337"],"no-negated-in-lhs",["338"],"@typescript-eslint/no-unused-vars","'SkeletonScrollMenu' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'addIframeObj' is defined but never used.","'raycaster' is assigned a value but never used.","'mouse' is assigned a value but never used.","'buildingTexture' is assigned a value but never used.","'project3BuffGeo' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","@typescript-eslint/consistent-type-assertions","Use 'as THREE.Mesh' instead of '<THREE.Mesh>'.","TSTypeAssertion","as","'addLamp' is defined but never used.","'addDescriptionBoard' is defined but never used.","'scene' is defined but never used.","'THREE' is defined but never used.","'FlatShading' is defined but never used.","'camera' is defined but never used.","'nomadLogo' is defined but never used.","'PointLightHelper' is defined but never used.","'lightHelper' is assigned a value but never used.","'floorImage2' is defined but never used.","'floorImage3' is defined but never used.","'BackSide' is defined but never used.","'JFlixDoorHole' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Link' is defined but never used.","'SideBar' is assigned a value but never used.","'styled' is defined but never used.","'ExplorerLink' is defined but never used.","'ExplorerModal' is defined but never used.","'WikiContentBox' is defined but never used.","'handleExplorer' is assigned a value but never used.","'ThemedStyledFunction' is defined but never used.","'Inside6' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]