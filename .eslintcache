[{"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\index.tsx":"1","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\reportWebVitals.ts":"2","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\VideoBackground.tsx":"3","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\GlobalStyles.ts":"4","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\App.tsx":"5","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\SkewScrollMenu.tsx":"6","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Home.tsx":"7","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\routes.tsx":"8","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Exhibition.tsx":"9"},{"size":574,"mtime":1608072987566,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1607822105962,"results":"12","hashOfConfig":"11"},{"size":638,"mtime":1608112698128,"results":"13","hashOfConfig":"11"},{"size":278,"mtime":1607854579927,"results":"14","hashOfConfig":"11"},{"size":269,"mtime":1608907362027,"results":"15","hashOfConfig":"11"},{"size":4906,"mtime":1608613626185,"results":"16","hashOfConfig":"11"},{"size":1017,"mtime":1608906363056,"results":"17","hashOfConfig":"11"},{"size":448,"mtime":1608907574130,"results":"18","hashOfConfig":"11"},{"size":351,"mtime":1608906411510,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"35bok3",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\index.tsx",[],["44","45"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\reportWebVitals.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\VideoBackground.tsx",[],["46","47"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\GlobalStyles.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\App.tsx",["48"],"import GlobalStyles from \"./Components/GlobalStyles\";\nimport { GlobalRouter } from \"./routes\";\nimport Home from \"./Screen/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlobalStyles />\n      <GlobalRouter />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\SkewScrollMenu.tsx",["49"],"import React, { useEffect, useRef, useState } from \"react\"\r\nimport styled, { keyframes } from \"styled-components\"\r\n\r\n\r\nconst Container = styled.div`\r\nwidth: 100vw;\r\nheight: 100vh;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\noverflow: hidden;\r\n`\r\n\r\nconst TextContainer = styled.div`\r\n    width: 80vw;\r\n    height: 90vh; \r\n    position: absolute;\r\n    opacity: 0.7;\r\n    z-index: 1;\r\n    top: 10%;\r\n    right: 0%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    overflow: auto;\r\n    scroll-behavior: smooth;\r\n    ::-webkit-scrollbar {\r\n    width: 0px;  /* Remove scrollbar space */\r\n    background: transparent;  /* Optional: just make scrollbar invisible */\r\n}\r\n`\r\n\r\nconst TextArea = styled.div`\r\n    color: black;\r\n    width: 100%;\r\n    font-size: 10.5vw;\r\n    height: 20%;\r\n    display: flex;\r\n    justify-content: center;\r\n      /* Prefix required. Even Firefox only supports the -webkit- prefix */\r\n    font-family: fantasy;\r\n    margin-bottom: 80px;\r\n    -webkit-text-stroke: 4px white;\r\n    -webkit-text-fill-color: transparent;\r\n    transition: -webkit-text-fill-color 0.5s;\r\n\r\n    :hover{\r\n        -webkit-text-fill-color: white;\r\n        cursor: pointer;\r\n        \r\n    }\r\n    @keyframes inclineTexts {\r\n    0%{\r\n        transform: skew(0deg);\r\n    }\r\n    100%{\r\n        transform: skew(-10deg);\r\n    }\r\n    }\r\n\r\n    @keyframes revertIncline {\r\n        0%{\r\n            transform: skew(-10deg);\r\n        }\r\n        100%{\r\n            transform: skew(0deg)\r\n        }\r\n    }\r\n\r\n    @keyframes InclineTextsLeft {\r\n    0%{\r\n        transform: skew(0deg);\r\n    }\r\n    100%{\r\n        transform: skew(10deg);\r\n    }\r\n    }\r\n\r\n    @keyframes revertInclineLeft {\r\n        0%{\r\n            transform: skew(10deg);\r\n        }\r\n        100%{\r\n            transform: skew(0deg)\r\n        }\r\n    }\r\n\r\n`\r\n\r\nconst Video = styled.video`\r\n  width: 70%;\r\n  height: 70%;\r\n  object-fit: fill;\r\n \r\n  box-shadow: 0px 0px 200px #68B793;\r\n`\r\n\r\ninterface IProps {\r\n    texts:Array<string>,\r\n    colors:Array<string>,\r\n    videoList: Array<string>,\r\n}\r\n\r\n\r\n\r\n// 스크롤 시 글자 기울이는 애니메이션\r\nconst inclinetexts = () => {\r\n    const textContainer = document.getElementById(\"textContainer\")\r\n    textContainer?.addEventListener(\"wheel\", () => {\r\n            if(textContainer.scrollTop > 0){\r\n            textContainer.style.animation = \"\"\r\n            const originPosition = textContainer.scrollTop + textContainer.scrollHeight\r\n            let currentPosition\r\n\r\n            setTimeout(() => {\r\n                currentPosition = textContainer.scrollTop + textContainer.scrollHeight;\r\n                \r\n                console.log(originPosition)\r\n                console.log(currentPosition)\r\n                console.dir(textContainer)\r\n                // 스크롤을 내릴 때\r\n                if(originPosition <= currentPosition){\r\n                    textContainer.style.animation = `inclineTexts 1s forwards`\r\n                     setTimeout(() => {\r\n                         textContainer.style.animation = `revertIncline 3s forwards`\r\n                     }, 0)\r\n                }\r\n                // 스크롤을 올릴 때\r\n                else if(originPosition > currentPosition){\r\n                    textContainer.style.animation = `InclineTextsLeft 1s forwards`\r\n                     setTimeout(() => {\r\n                         textContainer.style.animation = `revertInclineLeft 3s forwards`\r\n                     }, 0)\r\n                }\r\n              \r\n            }, 50);\r\n        }\r\n        }) \r\n    \r\n}\r\n\r\n\r\nconst SkeletonScrollMenu:React.FC<IProps> = ({texts, colors, videoList}) => {\r\n    const [videoIndex, setvideoIndex] = useState(0) // 화면에 나오는 비디오를 선택하기 위한 index 값\r\n    const video = useRef<HTMLVideoElement>(null)\r\n\r\n    const handleTexts:Function = (texts: Array<string>, colors: Array<string>) => { // props 전달 안되는 문제 고쳐야함\r\n        console.log(texts)\r\n        console.log(colors)\r\n        return texts.map( (text, index) => <TextArea onMouseOver = {() => selectVideo(index, colors)} className=\"textAreas\"> \r\n            {text}\r\n            </TextArea>\r\n            )\r\n    }\r\n    \r\n    const selectVideo = (index:number, colors:string[]) => {\r\n        console.log(index)\r\n        setvideoIndex(index)\r\n        console.log(video)\r\n        if(video.current !== null) {\r\n            video.current.style.boxShadow = `0px 0px 200px ${colors[index]}`\r\n        }\r\n        \r\n   \r\n        \r\n    }\r\n    \r\n    useEffect(() => {\r\n        inclinetexts()\r\n    }, [])\r\n\r\nreturn <Container>\r\n<TextContainer id=\"textContainer\">\r\n        {handleTexts(texts, colors)}\r\n    </TextContainer>\r\n        <Video src={videoList[videoIndex]} ref={video} onContextMenu={(e) => e.preventDefault()} autoPlay muted loop></Video>\r\n</Container>\r\n}\r\n\r\n        \r\n\r\n\r\nexport default SkeletonScrollMenu",["50","51"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Home.tsx",["52","53"],"import styled from \"styled-components\"\r\nimport VideoBackground from \"../Components/VideoBackground\"\r\nimport SkewScrollMenu from \"../Components/SkewScrollMenu\";\r\nimport { useState } from \"react\";\r\n\r\nconst Container = styled.section`\r\nwidth: 100vw;\r\nheight: 100vh;\r\noverflow: auto;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nbackground-color: black;\r\nopacity: 1;\r\n`\r\n\r\nconst Home:React.FC = () => {\r\n\r\nreturn <Container>\r\n       \r\n      <SkewScrollMenu texts={[\"About Me\", \"Exhibition ✨\", \"Documents\", \"Books\", \"Interested\", \"Contact Me...\",\"Github\"]} \r\n      colors={[\"#79D0FF\",\"green\", \"white\", \"#C56AC8\", \"#FBD591\", \"skyblue\", \"purple\", \"gray\"]}\r\n      videoList={[\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\", \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerBlazes.mp4\", \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerEscapes.mp4\"]} \r\n      ></SkewScrollMenu>\r\n</Container>}\r\n\r\nexport default Home","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\routes.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Exhibition.tsx",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"54","replacedBy":"58"},{"ruleId":"56","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":12},{"ruleId":"60","severity":1,"message":"64","line":2,"column":18,"nodeType":"62","messageId":"63","endLine":2,"endColumn":27},{"ruleId":"54","replacedBy":"65"},{"ruleId":"56","replacedBy":"66"},{"ruleId":"60","severity":1,"message":"67","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":23},{"ruleId":"60","severity":1,"message":"68","line":4,"column":10,"nodeType":"62","messageId":"63","endLine":4,"endColumn":18},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],["69"],["70"],"@typescript-eslint/no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'keyframes' is defined but never used.",["69"],["70"],"'VideoBackground' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]