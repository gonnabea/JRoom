[{"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\index.tsx":"1","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\reportWebVitals.ts":"2","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\GlobalStyles.ts":"3","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\App.tsx":"4","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\routes.tsx":"5","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Home.tsx":"6","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Exhibition.tsx":"7","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Interested.tsx":"8","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\SkewScrollMenu.tsx":"9","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeScene.tsx":"10","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\DirectionalLight.ts":"11","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\Floor.ts":"12","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\LogoBox.ts":"13","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\Window.ts":"14","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\FontLoader.ts":"15","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\SunLight.ts":"16","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\SpotLight.ts":"17","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\RoofWIndowHole.ts":"18","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\GLTFModelLoader.ts":"19","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\JFlixObjects.ts":"20","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\BackgroundBox.ts":"21","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\Frame.ts":"22","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\SelectBtn.ts":"23","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\CeilConnetor.ts":"24","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\MainHallObjects.ts":"25","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\JustReadItObjs.ts":"26","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\Header.tsx":"27","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\floor.ts":"28","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\DescriptionBoard.ts":"29","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\ONObjects.ts":"30"},{"size":567,"mtime":1610446256210,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":1607822105962,"results":"33","hashOfConfig":"32"},{"size":259,"mtime":1610446268792,"results":"34","hashOfConfig":"32"},{"size":231,"mtime":1610446252706,"results":"35","hashOfConfig":"32"},{"size":562,"mtime":1610446261138,"results":"36","hashOfConfig":"32"},{"size":1167,"mtime":1615157629563,"results":"37","hashOfConfig":"32"},{"size":621,"mtime":1615158040961,"results":"38","hashOfConfig":"32"},{"size":1719,"mtime":1613649287644,"results":"39","hashOfConfig":"32"},{"size":4651,"mtime":1614966216175,"results":"40","hashOfConfig":"32"},{"size":21099,"mtime":1615219824597,"results":"41","hashOfConfig":"32"},{"size":1100,"mtime":1614083412506,"results":"42","hashOfConfig":"32"},{"size":1468,"mtime":1614952692041,"results":"43","hashOfConfig":"32"},{"size":626,"mtime":1615147347276,"results":"44","hashOfConfig":"32"},{"size":616,"mtime":1612535944246,"results":"45","hashOfConfig":"32"},{"size":1128,"mtime":1612195046515,"results":"46","hashOfConfig":"32"},{"size":2152,"mtime":1615219925482,"results":"47","hashOfConfig":"32"},{"size":758,"mtime":1611833519306,"results":"48","hashOfConfig":"32"},{"size":3306,"mtime":1615219264296,"results":"49","hashOfConfig":"32"},{"size":643,"mtime":1611225380813,"results":"50","hashOfConfig":"32"},{"size":7690,"mtime":1615132464999,"results":"51","hashOfConfig":"32"},{"size":1715,"mtime":1611937681903,"results":"52","hashOfConfig":"32"},{"size":2005,"mtime":1611756294731,"results":"53","hashOfConfig":"32"},{"size":4608,"mtime":1615134595476,"results":"54","hashOfConfig":"32"},{"size":1030,"mtime":1611761385155,"results":"55","hashOfConfig":"32"},{"size":2761,"mtime":1615149358830,"results":"56","hashOfConfig":"32"},{"size":3577,"mtime":1615147658384,"results":"57","hashOfConfig":"32"},{"size":663,"mtime":1613649316794,"results":"58","hashOfConfig":"32"},{"size":1469,"mtime":1615146225963,"results":"59","hashOfConfig":"32"},{"size":2415,"mtime":1615074490988,"results":"60","hashOfConfig":"32"},{"size":1619,"mtime":1615156819910,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"35bok3",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\index.tsx",[],["133","134"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\reportWebVitals.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\GlobalStyles.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\App.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\routes.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Home.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Exhibition.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Screen\\Interested.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\SkewScrollMenu.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeScene.tsx",["135","136","137","138","139","140","141","142","143","144"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\DirectionalLight.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\Floor.ts",["145","146"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\LogoBox.ts",["147"],"import * as THREE from \"three\"\r\nimport { FlatShading } from \"three\"\r\nimport { scene } from \"../ThreeScene\"\r\n\r\nexport const addLogoBox = (position: { x: number; y: number; z: number }, image: string) => {\r\n  const logoBoxGeo = new THREE.BoxBufferGeometry(300, 300, 100)\r\n  const logoBoxTexture = new THREE.TextureLoader().load(image)\r\n  const logoBoxMat = new THREE.MeshPhongMaterial({\r\n    map: logoBoxTexture,\r\n  })\r\n\r\n  const logoBox = new THREE.Mesh(logoBoxGeo, logoBoxMat)\r\n  logoBox.receiveShadow = true\r\n  logoBox.castShadow = true\r\n\r\n  logoBox.position.set(position.x, position.y, position.z)\r\n  scene.add(logoBox)\r\n}\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\Window.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\FontLoader.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\SunLight.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\SpotLight.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\RoofWIndowHole.ts",["148"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\GLTFModelLoader.ts",["149"],"import * as THREE from \"three\"\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\r\nimport { scene } from \"../ThreeScene\"\r\n\r\nconst loader = new GLTFLoader()\r\n\r\nexport const GLTFModelLoader = (\r\n  modelUrl: string,\r\n  scale: { x: number; y: number; z: number },\r\n  position: { x: number; y: number; z: number },\r\n  rotation: { x: number; y: number; z: number }\r\n) => {\r\n  loader.load(modelUrl, (gltf) => {\r\n    gltf.scene.scale.set(scale.x, scale.y, scale.z)\r\n    gltf.scene.position.set(position.x, position.y, position.z)\r\n    gltf.scene.rotation.set(rotation.x, rotation.y, rotation.z)\r\n\r\n    scene.add(gltf.scene)\r\n  })\r\n}\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\JFlixObjects.ts",["150","151","152","153","154"],"import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\r\nimport { scene } from \"../ThreeScene\"\r\nimport { FontLoder } from \"./FontLoader\"\r\nimport { addLogoBox } from \"./LogoBox\"\r\n\r\nimport reactLogo from \"../../resources/images/reactLogo.jpg\"\r\nimport styledComponentsLogo from \"../../resources/images/styledComponents.jpg\"\r\nimport netlifyLogo from \"../../resources/images/netlify.jpg\"\r\nimport jsLogo from \"../../resources/images/vanillajs.png\"\r\nimport sunsetImg1 from \"../resources/images/Sunset Backgrounds/sunset12.jpg\"\r\nimport { addCeilConnector } from \"./CeilConnetor\"\r\nimport { addFrame } from \"./Frame\"\r\nimport * as THREE from \"three\"\r\nimport CSS3D from \"three-css3drenderer\"\r\nimport { cssScene } from \"../ThreeScene\"\r\nimport addDescriptionBoard from \"./DescriptionBoard\"\r\nimport { addRoofWindowHole } from \"./RoofWIndowHole\"\r\nimport { addWindow } from \"./Window\"\r\nimport { addSelectBtn } from \"./SelectBtn\"\r\n\r\nexport const JFlixObjects = () => {\r\n  // J-Flix 지붕\r\n  const roofShape = new THREE.Shape()\r\n  roofShape.moveTo(0, 0)\r\n  roofShape.lineTo(1000, 0) // rotate로 인해 x는 높이, y는 깊이\r\n  roofShape.lineTo(1000, 1000)\r\n  roofShape.lineTo(0, 2000)\r\n\r\n  const extrudeSettings = {\r\n    steps: 2,\r\n    depth: 3000, // Z축: 깊이 (rotate로 인해 너비가 됨)\r\n    bevelEnabled: true,\r\n    bevelThickness: 1,\r\n    bevelSize: 1,\r\n    bevelOffset: 0,\r\n    bevelSegments: 1,\r\n  }\r\n\r\n  const roofGeometry = new THREE.ExtrudeGeometry(roofShape, extrudeSettings)\r\n  const roofMaterial = new THREE.MeshPhongMaterial({\r\n    color: 0x24292e,\r\n    specular: \"orange\",\r\n    flatShading: true,\r\n  })\r\n  roofMaterial.side = THREE.DoubleSide\r\n  const roofMesh = new THREE.Mesh(roofGeometry, roofMaterial)\r\n\r\n  // roofGeometry.faces.splice(20, 4) // 지붕의 밑면 제거\r\n\r\n  // 창문 구멍 뚫기\r\n\r\n  addRoofWindowHole(roofMesh)\r\n\r\n  // 지붕에 달린 창문 (앞면 3개)\r\n\r\n  addWindow(\r\n    { x: -750, y: 975, z: 500 },\r\n    { x: 400, y: 315, z: 300 },\r\n    { x: -Math.PI / 4, y: -Math.PI, z: 0 }\r\n  ) // Arguments: {position, scale, rotation}\r\n  addWindow(\r\n    { x: 0, y: 975, z: 500 },\r\n    { x: 400, y: 315, z: 300 },\r\n    { x: -Math.PI / 4, y: -Math.PI, z: 0 }\r\n  )\r\n  addWindow(\r\n    { x: 750, y: 975, z: 500 },\r\n    { x: 400, y: 315, z: 300 },\r\n    { x: -Math.PI / 4, y: -Math.PI, z: 0 }\r\n  )\r\n\r\n  // 지붕에 달린 창문 (뒷면 1개)\r\n\r\n  // addWindow(\r\n  //   { x: 0, y: 1050, z: -400 },\r\n  //   { x: 500, y: 350, z: 300 },\r\n  //   { x: Math.PI / 4, y: -Math.PI, z: 0 }\r\n  // )\r\n\r\n  // 책 모형에 붙일 텍스트 geometry\r\n  FontLoder(\r\n    {\r\n      fontModelUrl: \"/fonts/helvetiker_regular.typeface.json\",\r\n      text: \"J-Flix\",\r\n      size: 80,\r\n      height: 50,\r\n      color: 0x02f6d5,\r\n      bevelSize: 7,\r\n    },\r\n    { x: 100, y: 200, z: -900 }\r\n  )\r\n  // 프로젝트 제목\r\n\r\n  // 제작자 이름\r\n  FontLoder(\r\n    {\r\n      fontModelUrl: \"/fonts/helvetiker_regular.typeface.json\",\r\n      text: \"Made By.Jiwon\",\r\n      size: 35,\r\n      height: 50,\r\n      color: 0xffffff,\r\n      bevelSize: 3,\r\n    },\r\n    { x: 100, y: 100, z: -900 }\r\n  )\r\n\r\n  FontLoder(\r\n    {\r\n      fontModelUrl: \"/fonts/D2D.json\",\r\n      text:\r\n        \"HTML,CSS,순수_JavaScript로_만든\\n\\n미니_프로젝트들과_\\n\\n_리액트를_사용하여_만든_\\n\\nnomflix_클론입니다\",\r\n      size: 20,\r\n      height: 10,\r\n      color: 0xffffff,\r\n      bevelSize: 1,\r\n    },\r\n    { x: -200, y: 0, z: -900 }\r\n  )\r\n\r\n  // 기술스택 박스 만들기\r\n\r\n  addLogoBox({ x: -500, y: 200, z: -940 }, reactLogo)\r\n  addLogoBox({ x: -500, y: -200, z: -940 }, styledComponentsLogo)\r\n  addLogoBox({ x: 700, y: 100, z: -940 }, netlifyLogo)\r\n  addLogoBox({ x: 700, y: -300, z: -940 }, jsLogo)\r\n\r\n  const loader = new GLTFLoader()\r\n\r\n  // TV GLTF 모델 로드\r\n  loader.load(\"/models/2018_flat_screen_tv/scene.gltf\", (gltf) => {\r\n    gltf.scene.scale.set(750, 750, 2000)\r\n    gltf.scene.position.set(-1200, 0, 0)\r\n    gltf.scene.traverse(function (child) {\r\n      if ((<THREE.Mesh>child).isMesh) {\r\n        child.castShadow = true\r\n        child.receiveShadow = true\r\n      }\r\n    })\r\n    gltf.scene.rotateY(Math.PI / 2)\r\n    scene.add(gltf.scene)\r\n  })\r\n\r\n  // 소파 모델 로드\r\n\r\n  loader.load(\"/models/sofa/scene.gltf\", (gltf) => {\r\n    gltf.scene.scale.set(220, 220, 220)\r\n    gltf.scene.position.set(0, -500, 100)\r\n\r\n    gltf.scene.rotateY(Math.PI)\r\n    gltf.scene.traverse(function (child) {\r\n      if ((<THREE.Mesh>child).isMesh) {\r\n        child.castShadow = true\r\n        child.receiveShadow = true\r\n      }\r\n    })\r\n    scene.add(gltf.scene)\r\n  })\r\n\r\n  // 팝콘 모델 로드\r\n\r\n  loader.load(\"/models/popcorn_bucket/scene.gltf\", (gltf) => {\r\n    gltf.scene.scale.set(100, 100, 100)\r\n    gltf.scene.position.set(-1000, -500, 850)\r\n\r\n    gltf.scene.rotateY(Math.PI)\r\n    scene.add(gltf.scene)\r\n  })\r\n\r\n  // 방문 모델 로드\r\n\r\n  loader.load(\"/models/door/scene.gltf\", (gltf) => {\r\n    gltf.scene.scale.set(600, 300, 300)\r\n    gltf.scene.position.set(1200, -500, -1030)\r\n    gltf.scene.rotateY(Math.PI / 2)\r\n\r\n    scene.add(gltf.scene)\r\n  })\r\n\r\n  // 액자 모델 추가, 노마드 로고 그림 배치\r\n  addFrame()\r\n\r\n  // 천장과 벽지 이음새 생성\r\n  addCeilConnector({ x: 2, y: 3, z: 9.9 }, 200, { x: 1480, y: 490, z: -1000 }, \"black\", {\r\n    x: 0,\r\n    y: 0,\r\n    z: Math.PI / 2,\r\n  })\r\n\r\n  addCeilConnector({ x: 2, y: 3, z: 9.9 }, 200, { x: -1460, y: 490, z: -1000 }, \"black\", {\r\n    x: 0,\r\n    y: 0,\r\n    z: Math.PI,\r\n  })\r\n\r\n  addCeilConnector({ x: 2, y: 3, z: 9.9 }, 300, { x: -1460, y: 480, z: -970 }, \"black\", {\r\n    x: 0,\r\n    y: Math.PI / 2,\r\n    z: Math.PI / 2,\r\n  })\r\n  addCeilConnector({ x: 2, y: 3, z: 9.9 }, 300, { x: -1460, y: 485, z: 970 }, \"black\", {\r\n    x: 0,\r\n    y: Math.PI / 2,\r\n    z: -Math.PI / 2,\r\n  })\r\n\r\n  // 바닥 이음새\r\n  addCeilConnector({ x: 2, y: 3, z: 9.9 }, 200, { x: 1480, y: -490, z: -1000 }, \"grey\", {\r\n    x: 0,\r\n    y: 0,\r\n    z: Math.PI / 2,\r\n  })\r\n\r\n  addCeilConnector({ x: 2, y: 3, z: 9.9 }, 200, { x: -1460, y: -490, z: -1000 }, \"grey\", {\r\n    x: 0,\r\n    y: 0,\r\n    z: Math.PI,\r\n  })\r\n\r\n  addCeilConnector({ x: 2, y: 3, z: 9.9 }, 300, { x: -1460, y: -480, z: -970 }, \"grey\", {\r\n    x: 0,\r\n    y: Math.PI / 2,\r\n    z: Math.PI / 2,\r\n  })\r\n\r\n  addCeilConnector({ x: 2, y: 3, z: 9.9 }, 300, { x: -1460, y: -485, z: 970 }, \"grey\", {\r\n    x: 0,\r\n    y: Math.PI / 2,\r\n    z: -Math.PI / 2,\r\n  })\r\n\r\n  // 선택 버튼 생성\r\n\r\n  // J-Flix 방 포커싱\r\n  addSelectBtn({\r\n    text: \"0\",\r\n    btnPosition: { x: 0, y: 300, z: -800 },\r\n    cameraPosition: { x: -2773.8192101111504, y: 490.0248603839669, z: 4120.7527992239675 },\r\n    targetPosition: { x: 0, y: 0, z: 0 },\r\n    zoomIndex: 0.3,\r\n  })\r\n\r\n  // tv 포커싱\r\n  addSelectBtn({\r\n    text: \"1\",\r\n    btnPosition: { x: -1300, y: 600, z: 500 },\r\n    cameraPosition: { x: 1500, y: 300, z: 0 },\r\n    zoomIndex: 0.25,\r\n  })\r\n\r\n  // 채널 변경 버튼 & tv 포커싱\r\n  addSelectBtn({\r\n    text: \"✨\",\r\n    btnPosition: { x: -1300, y: 600, z: 300 },\r\n    cameraPosition: { x: 1500, y: 300, z: 0 },\r\n    zoomIndex: 0.25,\r\n  })\r\n\r\n  // 프로젝트 설명 DOM 오브젝트\r\n  addDescriptionBoard({\r\n    width: \"600px\",\r\n    height: \"400px\",\r\n    description:\r\n      \"영화 소개 사이트 입니다. 리액트 내에서 ajax를 사용해 만들었으며, json 데이터의 동적 처리, SPA, 컴포넌트 활용 등 순수 JavaScript와 비교해서 어떤 점이 리액트가 우수한 지 알 수 있었던 프로젝트였습니다.\",\r\n    title: \"J-Flix\",\r\n    titleColor: \"#10EEC6\",\r\n    siteUrl: \"https://nomfilx-jiwon.netlify.app/#/\",\r\n    position: { x: -1200, y: 610, z: -400 },\r\n    rotation: { x: 0, y: Math.PI / 2, z: 0 },\r\n  })\r\n}\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\BackgroundBox.ts",["155","156"],"import groundImg from \"../../resources/images/ground.jpg\"\r\nimport { scene } from \"../ThreeScene\"\r\nimport * as THREE from \"three\"\r\n\r\n// 노을 배경 박스 생성\r\n\r\nexport const addBackgroundBox = () => {\r\n  const materialArray = []\r\n  const texture_ft = new THREE.TextureLoader().load(\r\n    \"https://media-exp1.licdn.com/dms/image/C511BAQE0NnIkjkotGA/company-background_10000/0/1541489744017?e=2159024400&v=beta&t=8CzJngJh5TrtF6_WFRYSlDeycAkT52hAfb4qLYGYnv8\"\r\n  )\r\n  const texture_bk = new THREE.TextureLoader().load(\r\n    \"https://media-exp1.licdn.com/dms/image/C511BAQE0NnIkjkotGA/company-background_10000/0/1541489744017?e=2159024400&v=beta&t=8CzJngJh5TrtF6_WFRYSlDeycAkT52hAfb4qLYGYnv8\"\r\n  )\r\n  const texture_up = new THREE.TextureLoader().load(\r\n    \"https://media-exp1.licdn.com/dms/image/C511BAQE0NnIkjkotGA/company-background_10000/0/1541489744017?e=2159024400&v=beta&t=8CzJngJh5TrtF6_WFRYSlDeycAkT52hAfb4qLYGYnv8\"\r\n  )\r\n  const texture_dn = new THREE.TextureLoader().load(groundImg)\r\n\r\n  materialArray.push(new THREE.MeshBasicMaterial({ map: texture_ft }))\r\n  materialArray.push(new THREE.MeshBasicMaterial({ map: texture_ft }))\r\n  materialArray.push(new THREE.MeshBasicMaterial({ map: texture_ft }))\r\n  materialArray.push(new THREE.MeshBasicMaterial({ map: texture_dn })) // 땅 텍스쳐\r\n  materialArray.push(new THREE.MeshBasicMaterial({ map: texture_ft }))\r\n  materialArray.push(new THREE.MeshBasicMaterial({ map: texture_ft }))\r\n\r\n  const skyboxGeo = new THREE.BoxGeometry(9000, 19000, 19000)\r\n  const skybox = new THREE.Mesh(skyboxGeo, materialArray)\r\n  skybox.position.set(0, 8990, 0)\r\n  materialArray.map((mat) => {\r\n    mat.side = THREE.BackSide\r\n    return null\r\n  })\r\n  scene.add(skybox)\r\n}\r\n",["157","158"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\Frame.ts",["159"],"import * as THREE from \"three\"\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\r\nimport { camera, scene } from \"../ThreeScene\"\r\nimport nomadLogo from \"../../resources/images/nomadLogo.png\"\r\n\r\n// 액자 모델\r\nconst loader = new GLTFLoader()\r\n\r\nexport let frameGroupMesh: THREE.Object3D\r\nexport const addFrame = () => {\r\n  loader.load(\"/models/3d_architecture__photo_frame/scene.gltf\", (gltf) => {\r\n    frameGroupMesh = gltf.scene\r\n    frameGroupMesh.scale.set(10, 10, 10)\r\n    frameGroupMesh.position.set(1480, 0, 0)\r\n    frameGroupMesh.rotateY(Math.PI)\r\n\r\n    scene.add(frameGroupMesh)\r\n\r\n    // 카메라 시점이 액자 뒤로 갔을 때 사라지게 하는 알고리즘\r\n    window.addEventListener(\"mouseup\", () => {\r\n      console.log(camera.position)\r\n      console.log(camera.rotation)\r\n      const meshsOfFrame =\r\n        frameGroupMesh.children[0].children[0].children[0].children[0].children[0].children[0]\r\n          .children\r\n\r\n      meshsOfFrame.map((object) => {\r\n        if (camera.rotation.z > 0.2) {\r\n          object.visible = false\r\n        } else {\r\n          object.visible = true\r\n        }\r\n      })\r\n    })\r\n\r\n    // 액자에 들어갈 그림\r\n\r\n    const sizeCheckBox = new THREE.Box3().setFromObject(gltf.scene) // 액자 크기 측정을 위한 가상 박스\r\n    console.log(sizeCheckBox)\r\n    const frameWidth = sizeCheckBox.max.z - sizeCheckBox.min.z - 100\r\n    const frameHeight = sizeCheckBox.max.y - sizeCheckBox.min.y - 100\r\n    const frameDepth = sizeCheckBox.max.x - sizeCheckBox.min.x\r\n\r\n    const imageInFrameGeo = new THREE.PlaneBufferGeometry(frameWidth, frameHeight, frameDepth)\r\n    const imageInFrameTexture = new THREE.TextureLoader().load(nomadLogo)\r\n    const imageInFrameMat = new THREE.MeshPhongMaterial({ map: imageInFrameTexture })\r\n    const imageInFrame = new THREE.Mesh(imageInFrameGeo, imageInFrameMat)\r\n    imageInFrame.rotateY(-Math.PI / 2)\r\n    imageInFrame.position.set(1460, 0, 0)\r\n\r\n    scene.add(imageInFrame)\r\n  })\r\n}\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\SelectBtn.ts",["160","161","162","163","164","165"],"import * as THREE from \"three\"\r\nimport { FlatShading } from \"three\"\r\nimport {\r\n  camera,\r\n  scene,\r\n  selectBtnObjs,\r\n  cssScene,\r\n  embedWebsite,\r\n  controls,\r\n  websiteObject,\r\n} from \"../ThreeScene\"\r\nimport CSS3D from \"three-css3drenderer\"\r\nimport { frameGroupMesh } from \"./Frame\"\r\n\r\n// 선택 버튼 생성\r\nexport const addSelectBtn = (props: {\r\n  text: string\r\n  btnPosition: { x: number; y: number; z: number }\r\n  cameraPosition: { x: number; y: number; z: number }\r\n  targetPosition?: { x: number; y: number; z: number }\r\n  zoomIndex: number\r\n}) => {\r\n  function chooseProject() {\r\n    // 순차적으로 프로젝트 변경\r\n    // 나중에 버튼을 여러개 만들어 각각 선택할 수 있게 할까 고민중.\r\n    // switch - case로 변경 예정\r\n    if (embedWebsite.src === \"https://nomfilx-jiwon.netlify.app/#/\") {\r\n      embedWebsite.src = \"https://gonnabea.github.io/Music-Player/\"\r\n    } else if (embedWebsite.src === \"https://gonnabea.github.io/Music-Player/\") {\r\n      embedWebsite.src = \"https://gonnabea.github.io/Typing-Game/\"\r\n    } else if (embedWebsite.src === \"https://gonnabea.github.io/Typing-Game/\") {\r\n      embedWebsite.src = \"https://gonnabea.github.io/Hangman-Game/\"\r\n    } else if (embedWebsite.src === \"https://gonnabea.github.io/Hangman-Game/\") {\r\n      embedWebsite.src = \"https://gonnabea.github.io/Expense-Tracker/\"\r\n    } else if (embedWebsite.src === \"https://gonnabea.github.io/Expense-Tracker/\") {\r\n      embedWebsite.src = \"https://gonnabea.github.io/Speech-Text-Reader/\"\r\n    } else if (embedWebsite.src === \"https://gonnabea.github.io/Speech-Text-Reader/\") {\r\n      embedWebsite.src = \"https://gonnabea.github.io/Sortable-List/\"\r\n    } else if (embedWebsite.src === \"https://gonnabea.github.io/Sortable-List/\") {\r\n      embedWebsite.src = \"https://gonnabea.github.io/Breakout-Game/\"\r\n    } else {\r\n      embedWebsite.src = \"https://nomfilx-jiwon.netlify.app/#/\"\r\n    }\r\n  }\r\n\r\n  const selectBtn = document.createElement(\"button\")\r\n  selectBtn.innerHTML = props.text\r\n  selectBtn.style.width = \"100px\"\r\n  selectBtn.style.height = \"100px\"\r\n  selectBtn.style.fontSize = \"60px\"\r\n  selectBtn.style.borderRadius = \"100%\"\r\n  selectBtn.style.background = \"rgba(0,0,0,0.5)\"\r\n  selectBtn.style.color = \"white\"\r\n\r\n  selectBtn.onmouseover = () => {\r\n    selectBtn.style.color = \"skyblue\"\r\n    selectBtn.style.border = \"7px solid skyblue\"\r\n    selectBtn.style.cursor = \"pointer\"\r\n  }\r\n  selectBtn.onmouseleave = () => {\r\n    selectBtn.style.border = \"none\"\r\n\r\n    selectBtn.style.color = \"white\"\r\n  }\r\n\r\n  const selectBtnObj = new CSS3D.CSS3DObject(selectBtn)\r\n\r\n  selectBtnObjs.push(selectBtnObj)\r\n\r\n  selectBtnObj.position.set(props.btnPosition.x, props.btnPosition.y, props.btnPosition.z)\r\n  selectBtnObj.rotation.set(camera.rotation.x, camera.rotation.y, camera.rotation.z)\r\n  cssScene.add(selectBtnObj)\r\n\r\n  selectBtn.onclick = () => {\r\n    // 액자 모델 프레임\r\n    const meshsOfFrame =\r\n      frameGroupMesh?.children[0].children[0].children[0].children[0].children[0].children[0]\r\n        .children\r\n\r\n    if (props.text === \"0\") {\r\n      controls.target.set(0, 0, 0)\r\n    }\r\n\r\n    // TV 버튼을 클릭했을 경우\r\n    if (props.text === \"1\") {\r\n      controls.target.set(websiteObject.position.x, 0, websiteObject.position.z) // 예외적으로 타겟이 정해짐\r\n\r\n      camera.updateMatrix()\r\n\r\n      meshsOfFrame.map((object: { visible: boolean }) => {\r\n        object.visible = false\r\n      })\r\n    } // 프로젝트 변경 버튼을 클릭했을 경우\r\n    else if (props.text === \"✨\") {\r\n      chooseProject()\r\n      controls.target.set(websiteObject.position.x, 0, websiteObject.position.z)\r\n      camera.updateMatrix()\r\n      meshsOfFrame.map((object: { visible: boolean }) => {\r\n        object.visible = false\r\n      })\r\n    }\r\n\r\n    if (props.targetPosition) {\r\n      controls.target.set(props.targetPosition.x, props.targetPosition.y, props.targetPosition.z)\r\n    }\r\n    camera.position.set(props.cameraPosition.x, props.cameraPosition.y, props.cameraPosition.z)\r\n    camera.zoom = props.zoomIndex\r\n\r\n    camera.updateProjectionMatrix()\r\n    camera.updateMatrix()\r\n    cssScene.updateMatrixWorld()\r\n\r\n    // 카메라 자동 이동 시 iframe이 비활성화되는 현상 해결책\r\n    controls.rotateUp(-0.01)\r\n    controls.update()\r\n\r\n    selectBtnObjs.map((selectBtnObj) => {\r\n      selectBtnObj.scale.set(1, 1, 1)\r\n      selectBtnObj.rotation.set(camera.rotation.x, camera.rotation.y, camera.rotation.z)\r\n      camera.updateProjectionMatrix()\r\n      camera.updateMatrix()\r\n      cssScene.updateMatrixWorld()\r\n    })\r\n  }\r\n}\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\CeilConnetor.ts",["166"],"import { scene } from \"../ThreeScene\"\r\nimport * as THREE from \"three\"\r\nimport { BackSide, FrontSide } from \"three\"\r\n\r\n// 천장과 벽지 이음새\r\nexport const addCeilConnector = (\r\n  scale: { x: number; y: number; z: number },\r\n  depth: number,\r\n  position: { x: number; y: number; z: number },\r\n  color: string,\r\n  rotation: { x: number; y: number; z: number }\r\n) => {\r\n  const shape = new THREE.Shape()\r\n  shape.moveTo(0, 0)\r\n  shape.lineTo(10, 0)\r\n  shape.lineTo(10, 10)\r\n\r\n  const setting = {\r\n    steps: 2,\r\n    depth,\r\n    bevelEnabled: true,\r\n    bevelThickness: 1,\r\n    bevelSize: 10,\r\n    bevelOffset: 0,\r\n    bevelSegments: 1,\r\n  }\r\n\r\n  const geometry = new THREE.ExtrudeGeometry(shape, setting)\r\n  const material = new THREE.MeshBasicMaterial({ color })\r\n  const mesh = new THREE.Mesh(geometry, material)\r\n  mesh.scale.set(scale.x, scale.y, scale.z)\r\n  mesh.rotation.set(rotation.x, rotation.y, rotation.z)\r\n  mesh.position.set(position.x, position.y, position.z)\r\n  material.side = FrontSide\r\n  scene.add(mesh)\r\n}\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\MainHallObjects.ts",["167"],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\JustReadItObjs.ts",["168"],"import { scene } from \"../ThreeScene\"\r\nimport * as THREE from \"three\"\r\nimport { BackSide, DoubleSide } from \"three\"\r\nimport { GLTFModelLoader } from \"./GLTFModelLoader\"\r\nimport { FontLoder } from \"./FontLoader\"\r\nimport addDescriptionBoard from \"./DescriptionBoard\"\r\nimport { addSelectBtn } from \"./SelectBtn\"\r\nimport { addLogoBox } from \"./LogoBox\"\r\nimport nodeLogo from \"../../resources/images/nodeLogo.jpg\"\r\nimport mongoLogo from \"../../resources/images/mongoLogo.jpg\"\r\nimport jsLogo from \"../../resources/images/vanillajs.png\"\r\nimport herokuLogo from \"../../resources/images/herokuLogo.png\"\r\n\r\nexport const JustReadItObjs = () => {\r\n  const IntroVideo = document.createElement(\"video\")\r\n  IntroVideo.src = \"/videos/just-read-it.mp4\"\r\n  IntroVideo.autoplay = true\r\n  IntroVideo.loop = true\r\n\r\n  const videoTexture = new THREE.VideoTexture(IntroVideo)\r\n  videoTexture.minFilter = THREE.LinearFilter\r\n  videoTexture.magFilter = THREE.LinearFilter\r\n  videoTexture.format = THREE.RGBFormat\r\n  const rectangleGeo = new THREE.PlaneBufferGeometry(1600, 900)\r\n  const rectangleMat = new THREE.MeshBasicMaterial({ map: videoTexture, toneMapped: false })\r\n  rectangleMat.side = DoubleSide\r\n  videoTexture.needsUpdate = true\r\n  rectangleMat.needsUpdate = true\r\n\r\n  const videoMesh = new THREE.Mesh(rectangleGeo, rectangleMat)\r\n  videoMesh.rotateY(Math.PI / 2)\r\n  videoMesh.position.set(-4300, 500, -2500)\r\n  scene.add(videoMesh)\r\n\r\n  // 프로젝트 설명 보드\r\n  addDescriptionBoard({\r\n    siteUrl: \"https://just-read-it.herokuapp.com/\",\r\n    width: \"500px\",\r\n    height: \"400px\",\r\n    title: \"Just Read It\",\r\n    titleColor: \"orange\",\r\n    description:\r\n      \"node.js-express 서버와 자바스크립트 연습용 프로젝트입니다. 첫 사이드 프로젝트여서 현재는 도저히 수정이 힘들 정도로 코드 퀄리티가 안좋지만, 여러가지 신기한 기능이 들어간 프로젝트입니다.\",\r\n    position: { x: -4300, y: -200, z: -3300 },\r\n    rotation: { x: 0, y: Math.PI / 2, z: 0 },\r\n  })\r\n\r\n  // 스켈레톤 책장 모델\r\n  GLTFModelLoader(\r\n    \"/models/bookshelf_household_props_12 (1)/scene.gltf\",\r\n    { x: 1, y: 1, z: 1 },\r\n    { x: -2000, y: -500, z: -4000 },\r\n    { x: 0, y: 0, z: 0 }\r\n  )\r\n\r\n  // 일반 책장 모델\r\n  GLTFModelLoader(\r\n    \"/models/the_witchs_bookshelf/scene.gltf\",\r\n    { x: 100, y: 100, z: 100 },\r\n    { x: -3500, y: -500, z: -3900 },\r\n    { x: 0, y: -Math.PI / 2, z: 0 }\r\n  )\r\n\r\n  // 책상 모델\r\n  GLTFModelLoader(\r\n    \"/models/table_with_things/scene.gltf\",\r\n    { x: 80, y: 80, z: 80 },\r\n    { x: -3000, y: -500, z: -2500 },\r\n    { x: 0, y: -Math.PI / 2, z: 0 }\r\n  )\r\n\r\n  // 의자 모델\r\n  GLTFModelLoader(\r\n    \"/models/office_chair/scene.gltf\",\r\n    { x: 6, y: 6, z: 6 },\r\n    { x: -2300, y: -400, z: -2000 },\r\n    { x: 0, y: Math.PI / 2, z: 0 }\r\n  )\r\n\r\n  // 방 제목 폰트모델\r\n  FontLoder(\r\n    {\r\n      fontModelUrl: \"/fonts/helvetiker_regular.typeface.json\",\r\n      text: \"Just-Read-It\",\r\n      size: 80,\r\n      height: 50,\r\n      color: 0xff991f,\r\n      bevelSize: 7,\r\n    },\r\n    { x: -3500, y: 700, z: -4000 }\r\n  )\r\n\r\n  // Just-Read-It 포커싱\r\n  addSelectBtn({\r\n    text: \"4\",\r\n    btnPosition: { x: -1500, y: 0, z: -3000 },\r\n    cameraPosition: { x: -2000, y: 500, z: -2500 },\r\n    targetPosition: { x: -3000, y: 500, z: -2500 },\r\n    zoomIndex: 0.2,\r\n  })\r\n\r\n  addLogoBox({ x: -2700, y: 500, z: -1100 }, nodeLogo)\r\n  addLogoBox({ x: -3000, y: 500, z: -1100 }, mongoLogo)\r\n  addLogoBox({ x: -3000, y: 200, z: -1100 }, jsLogo)\r\n  addLogoBox({ x: -2700, y: 200, z: -1100 }, herokuLogo)\r\n}\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\Header.tsx",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\floor.ts",["169","170"],"import * as THREE from \"three\"\r\nimport { scene } from \"../ThreeScene\"\r\nimport floorImage2 from \"../../resources/images/floor2.jpg\"\r\nimport floorImage3 from \"../../resources/images/floor3.jpg\"\r\n\r\ninterface typeAddFloor {\r\n  width: number\r\n  height: number\r\n  position?: object\r\n  x: number\r\n  y: number\r\n  z: number\r\n  imageSrc: string\r\n}\r\n\r\nexport const addFloor = ({ width, height, x, y, z, imageSrc }: typeAddFloor) => {\r\n  const floorGeo = new THREE.PlaneBufferGeometry(width, height) // width, height\r\n  const floorTexture = new THREE.TextureLoader().load(imageSrc)\r\n  floorTexture.wrapS = floorTexture.wrapT = THREE.RepeatWrapping\r\n  floorTexture.repeat.set(7, 7)\r\n  floorTexture.encoding = THREE.sRGBEncoding\r\n\r\n  const floorMaterial = new THREE.MeshPhongMaterial({\r\n    map: floorTexture,\r\n    specular: \"orange\",\r\n    flatShading: true,\r\n  })\r\n\r\n  // 바닥 반사 효과\r\n  const cubeRenderTarget = new THREE.WebGLCubeRenderTarget(640, {\r\n    format: THREE.RGBFormat,\r\n    generateMipmaps: true,\r\n    minFilter: THREE.LinearMipmapLinearFilter,\r\n  })\r\n\r\n  const floorCamera = new THREE.CubeCamera(500, 1500, cubeRenderTarget)\r\n  floorCamera.position.set(0, 0, 0)\r\n  scene.add(floorCamera)\r\n\r\n  const floorMesh = new THREE.Mesh(floorGeo, floorMaterial)\r\n  floorMesh.position.set(0, 100, 0)\r\n  floorMesh.receiveShadow = true\r\n  floorMesh.rotateX(-Math.PI / 2) // -90도 로테이션\r\n  floorMesh.position.set(x, y, z) // 위치 조정\r\n  scene.add(floorMesh)\r\n}\r\n","C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\DescriptionBoard.ts",[],"C:\\Users\\최지원\\Desktop\\프로그래밍\\j-room\\src\\Components\\ThreeModules\\ONObjects.ts",[],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":5,"column":22,"nodeType":"177","messageId":"178","endLine":5,"endColumn":31},{"ruleId":"175","severity":1,"message":"179","line":10,"column":10,"nodeType":"177","messageId":"178","endLine":10,"endColumn":19},{"ruleId":"175","severity":1,"message":"180","line":14,"column":10,"nodeType":"177","messageId":"178","endLine":14,"endColumn":27},{"ruleId":"175","severity":1,"message":"181","line":17,"column":10,"nodeType":"177","messageId":"178","endLine":17,"endColumn":26},{"ruleId":"175","severity":1,"message":"182","line":18,"column":10,"nodeType":"177","messageId":"178","endLine":18,"endColumn":18},{"ruleId":"175","severity":1,"message":"183","line":88,"column":11,"nodeType":"177","messageId":"178","endLine":88,"endColumn":26},{"ruleId":"184","severity":1,"message":"185","line":510,"column":44,"nodeType":"186","messageId":"187","endLine":510,"endColumn":46},{"ruleId":"184","severity":1,"message":"185","line":529,"column":44,"nodeType":"186","messageId":"187","endLine":529,"endColumn":46},{"ruleId":"184","severity":1,"message":"185","line":547,"column":42,"nodeType":"186","messageId":"187","endLine":547,"endColumn":44},{"ruleId":"184","severity":1,"message":"185","line":555,"column":42,"nodeType":"186","messageId":"187","endLine":555,"endColumn":44},{"ruleId":"175","severity":1,"message":"188","line":3,"column":8,"nodeType":"177","messageId":"178","endLine":3,"endColumn":19},{"ruleId":"175","severity":1,"message":"189","line":4,"column":8,"nodeType":"177","messageId":"178","endLine":4,"endColumn":19},{"ruleId":"175","severity":1,"message":"190","line":2,"column":10,"nodeType":"177","messageId":"178","endLine":2,"endColumn":21},{"ruleId":"175","severity":1,"message":"191","line":24,"column":9,"nodeType":"177","messageId":"178","endLine":24,"endColumn":22},{"ruleId":"175","severity":1,"message":"192","line":1,"column":13,"nodeType":"177","messageId":"178","endLine":1,"endColumn":18},{"ruleId":"175","severity":1,"message":"193","line":10,"column":8,"nodeType":"177","messageId":"178","endLine":10,"endColumn":18},{"ruleId":"175","severity":1,"message":"194","line":14,"column":8,"nodeType":"177","messageId":"178","endLine":14,"endColumn":13},{"ruleId":"175","severity":1,"message":"195","line":15,"column":10,"nodeType":"177","messageId":"178","endLine":15,"endColumn":18},{"ruleId":"196","severity":1,"message":"197","line":134,"column":12,"nodeType":"198","messageId":"199","endLine":134,"endColumn":29},{"ruleId":"196","severity":1,"message":"197","line":151,"column":12,"nodeType":"198","messageId":"199","endLine":151,"endColumn":29},{"ruleId":"175","severity":1,"message":"200","line":12,"column":9,"nodeType":"177","messageId":"178","endLine":12,"endColumn":19},{"ruleId":"175","severity":1,"message":"201","line":15,"column":9,"nodeType":"177","messageId":"178","endLine":15,"endColumn":19},{"ruleId":"171","replacedBy":"202"},{"ruleId":"173","replacedBy":"203"},{"ruleId":"184","severity":1,"message":"185","line":27,"column":33,"nodeType":"186","messageId":"187","endLine":27,"endColumn":35},{"ruleId":"175","severity":1,"message":"192","line":1,"column":13,"nodeType":"177","messageId":"178","endLine":1,"endColumn":18},{"ruleId":"175","severity":1,"message":"190","line":2,"column":10,"nodeType":"177","messageId":"178","endLine":2,"endColumn":21},{"ruleId":"175","severity":1,"message":"204","line":5,"column":3,"nodeType":"177","messageId":"178","endLine":5,"endColumn":8},{"ruleId":"184","severity":1,"message":"185","line":90,"column":55,"nodeType":"186","messageId":"187","endLine":90,"endColumn":57},{"ruleId":"184","severity":1,"message":"185","line":98,"column":55,"nodeType":"186","messageId":"187","endLine":98,"endColumn":57},{"ruleId":"184","severity":1,"message":"185","line":117,"column":38,"nodeType":"186","messageId":"187","endLine":117,"endColumn":40},{"ruleId":"175","severity":1,"message":"205","line":3,"column":10,"nodeType":"177","messageId":"178","endLine":3,"endColumn":18},{"ruleId":"175","severity":1,"message":"206","line":2,"column":22,"nodeType":"177","messageId":"178","endLine":2,"endColumn":34},{"ruleId":"175","severity":1,"message":"205","line":3,"column":10,"nodeType":"177","messageId":"178","endLine":3,"endColumn":18},{"ruleId":"175","severity":1,"message":"188","line":3,"column":8,"nodeType":"177","messageId":"178","endLine":3,"endColumn":19},{"ruleId":"175","severity":1,"message":"189","line":4,"column":8,"nodeType":"177","messageId":"178","endLine":4,"endColumn":19},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"@typescript-eslint/no-unused-vars","'FrontSide' is defined but never used.","Identifier","unusedVar","'addWindow' is defined but never used.","'addRoofWindowHole' is defined but never used.","'addBackgroundBox' is defined but never used.","'addFrame' is defined but never used.","'buildingTexture' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'floorImage2' is defined but never used.","'floorImage3' is defined but never used.","'FlatShading' is defined but never used.","'JFlixDoorHole' is assigned a value but never used.","'THREE' is defined but never used.","'sunsetImg1' is defined but never used.","'CSS3D' is defined but never used.","'cssScene' is defined but never used.","@typescript-eslint/consistent-type-assertions","Use 'as THREE.Mesh' instead of '<THREE.Mesh>'.","TSTypeAssertion","as","'texture_bk' is assigned a value but never used.","'texture_up' is assigned a value but never used.",["207"],["208"],"'scene' is defined but never used.","'BackSide' is defined but never used.","'VideoTexture' is defined but never used.","no-global-assign","no-unsafe-negation"]